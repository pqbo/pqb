//package com.pqb.service;
//
//import com.alibaba.fastjson.JSONObject;
//import lombok.extern.slf4j.Slf4j;
//import org.apache.commons.lang3.StringUtils;
//import org.springframework.stereotype.Service;
//
//import javax.annotation.PostConstruct;
//import java.util.*;
//import java.util.function.Function;
//import java.util.function.Predicate;
//import java.util.regex.Matcher;
//import java.util.regex.Pattern;
//import java.util.stream.Collectors;
//
///**
// * @author tianjiauxan
// * 多标多包验证程序.
// */
//@Service
//@Slf4j
//public class MultistandardRearServiceImpl {
//    private String A = "拟中标人|首选中标候选人|第一中标人|第一成交供应商候选人|第一中签候选人|第1中标候选人|第一中标排序人|第一成交候选人|第一签约侯选人|第一成交候选单位|第一成交供应商|第一中标单位|第一中标（成交）候选人名称|第一承包候选人|第一中标侯选人|第一候选人|第一中签人|第一中标候选单位|第一排序人|第一中标排序单位名称|第一中标候选人|第一中标候选|第一中标候选中介机构|第一中选人|入选公司为|中标人1|成交人|第一名|第1名|（第一名）|排序第一|综合评分排名第一|第一：|中标人（乙方）|供应商（代理商）|中选供应商|中选中介机构名称|中选中介机构|合同乙方名称|中标（成交）供应商（全称）|推荐成交报价单位|推荐成交人|推荐中标人|中标候选人单位|中标候选人：|中标候选人|中标人:|推荐中标候选人|推荐签约单位|签约单位|中标（成交）供应商名称|中标厂商|中标供商|建议授标单位|拟定供应商名称|拟中标供应商|拟中标单位|拟中选单位|拟中选人|拟成交人|成交方|拟成交方|拟定中标供应商|拟定中标单位|拟定中选单位|拟成交企业|拟定中标人|拟定中选人|预中标供应商|预中标供应商名称|唯一供应商及地址|单一来源采购供应商|拟定单一来源采购供应商的名称、地址|单一来源供应商|中标人-牵头单位|中标人：牵头单位|履约供应商名称|竞得人|竞得单位|受让人|牵头人|受让单位|成交商家|成交供应商和电话|（供应商）|（中标人）名称|乙方（公章）|乙方：（盖电子公章）|竞得人（中标人）|成交候选供应商|承包单位|项目承接主体|竞标人|竞价单位|供应商（乙方）|中标/成交供应商名称、地址及报价|中标单位及中标金额、中标单位、中标价格（元）|成交单位/地址|联合体牵头方|经评标委员评定，拟定由|预中标（成交）人名称|并经我单位确认的中标人|推荐的候选谈判单位|最终确定的中标人|排名第一的|成交报价人名称|成交候选单位|本项目的成交供应商|中标侯选人|成交供应商名称|中标供应商|成交供应商|成交电商|成交服务商|中标施工方|包1的中选人|最终抽中的中选人|中标人全称|中标单位|采购项目的中标人|中标人名称|中标人|中标商|拟定采用供应商|拟定的唯一供应商名称、地址|（入围供应商）|供应商|原承租方|中标企业|成交单位|中包人|乙方|供应单位|承包人名称|承包人|中签单位|中标应商名称|成交竞租人|中标/中选单位|中标意向单位|中标人名单|中选机构名称|中选企业|中选候选人|中标（成交）单位|成交候选人|侯选/中标供应商|采购中标候选书商|推荐中标供应商|中标（成交）供应商|自报价厂商|设备的厂商|中选单位|承包单位名称|中标候选单位|最终确定中标人|预中标候选人|拟中标（成交）人|中标（成交）人|第二包供货候选单位|确定中标的监理机构|成交企业|第一包|第1包|（第一包）|中标回收商|供应商（全称）|供方|流入方名称|承包商|成交商|响应单位|确定中标的设计单位|成交公司|推荐中标候选单位|供货商|通过单位|中标公司|中标人（成交供应商）|成交供应商的名称|候选人|投标人名称|投标人|候选供应商|中标供应商名称、联系地址及中标金额|报价单位|承接单位|竞得入选人|中标结果|采购结果|投标单位|投标单位名称|侯选单位|成交厂商|土地使用权人|中选人推荐如下|中选人|中标厂家|结果公示-首选|（乙方）|供应商名称|中选承包商|中选中介服务机构|候选人名称|拟中商人|社会资本方|供货单位|施工单位|服务商名称|应答人名称|供应商名单|投标申请人|候选单位名称|一标段|1标段|1标|A包|标项一|报价人|中介服务单位|选取的中介服务机构|续租人|承包候选人|中标公司名单|中标方|受让方|候选人排名投标商名称制造商制造商国别及地区|投标商名称|生产厂家|中标供应商简介|供应厂家入围|服务机构|中标情况|中选候选人如下|中标候选人如下|经评标委员会认真评议，结果如下|成交供应商公布如下|成交供应商信息|拟定供应商信息|投标方-已中标|投标方|已中标|供应商名称(乙方)|中标情况-单位名称|承办单位|直购企业|单位名称/姓名|中标竞买人名称|中标单位-单位名称|中标候选单位-单位名称|第一中标候选人-单位名称|服务单位|拟中标单位-单位名称|中标供应商名称|中选单位-单位名称|中选机构|成交候选人推荐如下|候选人名单依次排序如下|成交人如下|买受人|确定中标单位如下|拟中标单位如下|中标信息|成交信息|成交供应商及成交金额|成交供应商名称、成交金额|成交供应商名称 成交金额|成交供应商名称、地址及成交金额|中标供应商名称、金额|竞标单位|中标供应商名称及金额|预中标候选人及预中标金额|，最后评定|经评标委员会评定|评审委员会推荐|结果公告如下|中标人名单公告如下|中标供应商如下|中标结果公布如下|中选候选人依次为|，公示如下|供应商名称及其地址|最低有效竞价商品|维修单位（盖章）|抽中编号及对应备选单位|符合要求最低报价|中标（成交）供应商候选人排序|拟中标结果如下|中标候选人名单公示如下|成交人分别|中标候选人，分别是：|生产企业|拟谈判单位|投标单位 标段名称 报价（元） 排序 备注 1|中标候选单位名次 1|序号 中标候选单位名称 中标候选单位名次|中价报价方名称|中商人|拟选用单位|中标单位名称|供应商(乙方)|中介机构名称-中选|竞投单位|中标公告 致：|确定入库名单如下|供货服务商(乙方)|预成交结果|中标、成交供应商名称|第一中选候选人|中标供货商|中标（成交）|第一成交|第一中标|第一供应商|B包|C包|D包|E包|F包|G包|标：|标:|二标段|三标段|四标段|五标段|六标段|2标段|3标段|4标段|5标段|6标段|一标包|二标包|三标包|四标包|五标包|六标包|1标包|2标包|3标包|4标包|5标包|6标包|1包|包：";
//    private String B = "标段|标包|分标|分包|标项|包项|包名称|标名称|包号|标号|包编号|标编号|包：|标：|包:|标:|包件|包名|标段(包)|编号|编码|代码|包段";
//    private String C = "标的|标的物|设备|标段|标包|分标|分包|标项|包项|包名称|标名称|物料|服务|工程|项目|商品|包件|物品|采购项|包名|标段\\(包\\)|货物|耗材|物资类别|物料类别|产品|合同段|物资名称|预中标内容|中标内容|报价产品|包段";
//    private String D = "公路段|教研室|体育处|养护段|建筑段|保障处|装备处|法规科|通信段|财务处|油料处|电务段|绿化所|客运站|车辆段|公寓段|工电段|备件科|客运段|办事处|组织部|销售部|销售店|监察队|经理部|供应段|车务段|供电段|维修段|电器组|公安处|执行三处|机关财务|口岸办公室|急救中心|血液中心|指挥中心|公路处|门诊部|经营中心|福利中心|处理中心|农技中心|批发中心|系统宣传中心|经营部|采购中心|拍卖中心|管理段|项目部|后勤部|印务中心|交警队|国民经济和社会信息化推进中心|资讯中心|商务中心|市政工程维修处|通电部|辅导中心|文印中心|评估中心|研发中心|保护中心|防治中心|接待处|填埋场|土地征地拆迁指挥部|运营中心|工务署|服务处|航道处|秩序司|安装队|信息院|村民组|机务段|国有土地上房屋征收处|废标|城市管理执法大队|融媒体中心|出让中心|交易中心|筹建办|不足三家|不足3家|输出办|健身中心|供应科|计划科|筹备处|检验处|征拆办|物流部|网格中心|财务司|监管司|招标投标中心|保险处|物管会|管理队|卫生队|秘书处|管理科|军分区|驻在组|执法队|联谊会|招标办|审批办|活动室|运行处|建管处|变电队|运输处|水电队|县委办公室|公证处|检定所|排灌所|监理处|装饰部|环境保护部|基建办|县委办|迁建办|水资办|巡察办|化校园(?![区])|科学中心|管理处|电子商行|控制中心|设计院|技术中心|经销处|指导中心|直属处|发展中心|物流中心|深圳中心|建司|管委会|销售中心|外事侨务办公室|管理中心|教育中心|办公设备商行|审计处|机动部|工作部|委员会办公室|工程队|管理办公室|县委员会统一战线工作部|执法支队|关爱中心|互助中心|救援中心|销毁中心|储备中心|经销部|采购部|采办部|开发中心|监理中心|工程建设处|代办处|发行中心|技术交流中心|监控中心|资源勘查中心|警察大队|综治办|地质大队|工程处|活动中心|科技中心|服务部|监督处|托养中心|信息中心|促进中心|工程部|测绘所|航标处|检测中心|支队|保障办公室|搬迁工作办公室|程建设办公室|交易所|卫生中心|医疗中心|防空办公室|宣传部|事务中心|预警中心|设计中心|储备库|保障部|检验测试中心|设备处|开发办公室|开发办|广西中心|信用中心|监测所|认证中心|小区管理办|校车办|联防队|统建办公室|分中心|文化旅游产业发展服务中心|分公司|采购办事处|保障中心|住房公积金管理中心|供保中心|车船队|政府办|调查队|西部中心|装备中心|监测中心|文印部|设备中心|党政办|特教中心|政府办公室|建设中心|地质队|服务队|建设处|海市政工程维修处|武装部|执法中心|原料部|卫生保健中|整理中心|派出所|防治所|检验所|测试所|控制所|管理三所|卫生所|研究所|戒毒所|养护所|采购所|督检测所|采购办公室|物贸中心|应用中心|防雷中心|台网中心|本级事业财务|安置中心|平安建设办|洞井街道|解放街道|海军某部|十三分部|分社|展销部|康复中心|训练中心|科技部|制作中心|推广中心|研究中心|咨询中心|调查中心|热电中心|配送中心|登记中心|网络中心|社服中心|新闻中心|供热中心|改善中心|能源部|分行|居委会|居委|设备科|二厂|环卫处|信息港中心|采办中心|教学中心|支付中心|体育中心|检验中心|审核中心|安全中心|艺术中心|考试中心|政务服务中心|兽医中心|养护中心|群众工作中心|编研中心|实验室|村分站|计划经营科|教育所|编码所|整治中心|研究生院|修缮队|扶贫办|分园(?![区])|街道办事处|中队|通讯社|人大办|南支队|城建处|财政所|预报台|农工部|教育办公室|房屋征收管理事务处|分院|旅社|小组办公室|港务|动车所|医疗所|参事室|路灯所|委编办|工商联|查违办|研究传承院|创文办|军干所|控违拆违办|仲裁院|（拘留）所|改制办|北支队|管理分局|公安分局|生态环境分局|广告部|装饰中心|广告中心|印务部|传媒中心|服务中心|批发部|经销中心|装潢部|社会工作服务中心|维修中心|鉴定中心|印刷部|快印部|评价中心|制作部|电脑部|印刷中心|交流中心|平台中心|修配中心|图文部|维修部|修理部|设计部|审查中心|供应部|测绘大队|门市部|百货部|分局|作业[一二三四五六七八九十\\d]{1,3}队|省级自然保护区管护中心|八中|工务段|事业部|支行|分所|大队|分校|总队|出版中心|供应站|转播台|基础建设项目监督管理办公室|基础设施建设管理办公室|县委员会办公室|移民迁建办公室|居民迁建工作办公室|迁建工作领导小组办公室|拆迁安置工作办公室|迁建工作办公室|迁建办公室|水资源办公室|巡察工作办公室|巡察工作领导小组办公室|巡察办公室|居民委员会|人大办公室|人大常委会办公室|改制领导小组办公室|改制服务办公室|拆迁办|寻察办|采购办|文明办|市委|县委|村委|省委|药房|制梁场|营业厅|炒货厂|食品厂|包装厂|热锻厂|零部件厂|艺术品中心|电器厂|部件厂|机床厂|刹车片厂|玩具厂|摩配店|雕刻店|电子厂|陶瓷厂|通讯行|总厂|附件厂|五金厂|压件厂|炒货店|模具厂|加工店|加工部|电动车店|加工点|刀具厂|机械店|供应处|车灯厂|灯泡厂|灯镜厂|汽车用品行|电机厂|胶带厂|仪表厂|车行|电子材料行|滤清器厂|离合器厂|发动机厂|电瓷厂|防锈剂厂|冲件厂|服务广场|旅馆|购销部|服装店|铸造厂|汽配行|织造厂|锁厂|用品厂|服务站|厨柜厂|手袋厂|车辆配套厂|综合厂|车辆厂|机带厂|电线厂|展销柜|车镜厂|车库门厂|装饰装修处|橱柜店|橡塑厂|电控门厂|翻新厂|皮具厂|供应中心|剪刀厂|贸易中心|车件厂|轮毂厂|零件厂|轴承厂|厨房用具厂|锻造厂|图文店|橡胶厂|工具厂|车筐厂|塑料店|贸易行|俱乐部|塑胶厂|装饰件厂|五金压铸厂|针织厂|电车线厂|座套厂|收购站|汽配部|治理中心|密封件厂|桥箱厂|轴瓦厂|蓄电池厂|汽车零件部|锁业|装饰广场|塑料喷涂厂|线闸厂|商坊|线束厂|模具店|销售处|弹簧厂|贸易部|运输队|传动件厂|手拖配套厂|装具厂|座椅厂|坐垫厂|聚氨酯厂|床垫厂|健身器材配套厂|胶合板厂|填料厂|衬垫厂|营业部|胶管阀厂|服饰店|服装部|服装厂|阀门厂|制线厂|钢管厂|布料店|工艺品材料行|铸件厂|皮革店|绣花厂|鞋店|皮革行|鞋行|布行|展示架厂|玩具店|鞋业行|制帽厂|服饰厂|鞋厂|鞋帽厂|培训中心|鞋业|磨床厂|饰品店|针织品厂|制袋厂|配件行|饰品厂|窗业|帽厂|软垫厂|五金线材厂|藤椅厂|沙发厂|家俱厂|五金行|开发部|建材店|制药厂|药店|液压机具厂|石膏板厂|工量具厂|纸品行|快餐店|构件厂|通讯|花艺厂|钢材行|喷塑厂|加工场|吹瓶厂|防水店|工艺品厂|铸钢厂|渔具厂|书画院|花园|工具店|配件中心|仪器厂|油封厂|铜铝管拉制厂|泵厂|衬衫店|材料店|齿轮减速器厂|酒厂|首饰厂|电缆厂|五金店|废品收购店|冲压厂|纸品厂|网厂|洁具厂|制剂厂|陶器厂|经贸中心|影楼|瓷厂|雕刻部|压机厂|切割行|设备行|面粉厂|电筒厂|杂货店|配色行|辅料店|影像室|制衣厂|模型厂|皮件厂|宠物店|海味行|电炉厂|音像店|电子出版物坊|绣品厂|抽纱厂|纺织厂|箱包厂|压包厂|厨具店|五金标件厂|广告店|广告|童装行|服务社|砂轮厂|园艺部|工艺社|加工行|玉器店|端砚厂|工艺品店|时装厂|时装店|灯饰店|服装辅料行|灯饰行|工业局|熔断器厂|保护器厂|批发站|电器店|辅料厂|机器厂|门业|运香厂|制作厂|化学品厂|助剂厂|工具行|厨具厂|耐材厂|毛刷厂|辅机厂|养蜂场|糖果厂|皮毛厂|煮饼厂|锅炉厂|购物|塑料行|家具城|家具店|机配厂|炉具厂|门厂|器械店|良种场|综合店|商社|电脑店|电脑行|橱柜|花炮厂|物资站|货运部|海水素厂|糖厂|水电站|化妆品厂|电子商柜|触点厂|器件行|厨俱厂|灯饰厂|购销站|五金部|制钉厂|门窗厂|链条厂|添加剂厂|建材厂|风机厂|制管厂|租赁站|收桥架厂|电料厂|传媒|法兰厂|元件厂|文化传播中心|药行|邮社|文化传媒机构|铝型材厂|铜管厂|布艺店|办公设备专店|汽配|雕刻厂|制面厂|种植场|苗莆|旅行社|油漆厂|装配厂|用减震器厂|网络传输中心|刃具厂|家纺厂|压铸厂|活动板房厂|制刷厂|纱窗厂|床单厂|调查规划设计队|布厂|轧延厂|床具厂|装饰材料行|竹帘厂|工艺行|电子行|人造花厂|熔炼厂|花岗岩厂|螺钉厂|吹塑厂|银饰行|设计店|顾问中心|渔具店|艺术作坊|机械配套厂|皮革厂|胶袋厂|龙骨厂|广告材料行|胶板厂|砖厂|工艺店|碳素厂|无纺布材料行|色素厂|美容中心|花店|童装店|胶粘剂厂|织布厂|器械厂|肉食店|纤维素厂|药材行|首饰行|手套厂|鞋业厂|童装厂|座垫厂|仪器店|锁具厂|切割厂|表件厂|茶庄|工矿配套厂|管件配套厂|泵阀配套厂|摩配厂|卷闸门厂|策划中心|信息传播中心|印染材料行|清洁用品部|生茶厂|测试中心|屠宰场|电热技术配套厂|橱柜厂|钓具店|帆布厂|网栏厂|刺绳厂|粮油店|不锈钢电动门厂|广告传播中心|拉闸铁门厂|牧场|燃料厂|拉闸门厂|炭素厂|陶瓷配套厂|钢材厂|玉器厂|陶瓷设备配套厂|布料行|防水布厂|弹簧配套厂|糖果店|保温材料行|制冷设备配套厂|洁具配套厂|家用电器配套厂|印刷材料行|艺术传播中心|模具配套厂|电力机械配套厂|电动车配套厂|齿轮配套厂|丝印材料行|神农素厂|五金|电化材料行|照明店|策划传播中心|服装材料行|配套厂|传播中心|园艺店|汽车配套厂|构建厂|布料厂|轮胎行|流量计仪表配套厂|建筑材料行|杂货铺|尿素厂|制砂场|装修处|电梯配套厂|机电配套厂|电工材料行|金属构件配套厂|五金阀门材料行|传输中心|电子配套厂|五金材料行|机械设备材料行|金属材料行|织带厂|毛巾厂|文件柜厂|炉管厂|纺织品厂|开关厂|租赁部|代理店|营销中心|家居馆|钢件厂|工程维修队|商厦|装潢店|器材行|乐器厂|木炭厂|结构厂|石材厂|软装生活馆|种植中心|水泥预制厂|家电中心|液化气站|批发城|树脂厂|家纺店|乐琴行|水箱厂|净水剂厂|剧团|经销店|餐饮店|活性炭厂|奇石场|水磨石厂|毛织厂|砂石场|金属线材厂|元器件厂|塑件厂|胶印厂|桶装水店|窗帘店|波纹管厂|成衣档|精选厂|家居生活馆|实验厂|搅拌站|服装鞋帽店|创意中心|科贸中心|硬质合金厂|电动车厂|喷织厂|电杆厂|品鉴中心|管件厂|灯具店|图文中心|散热器厂|标牌厂|训练局|采供站|通风管道厂|家居广场|布艺行|经营处|生肉店|颜料行|装饰店|印刷制版厂|花灯厂|工贸中心|砂场|封条厂|粮行|种植园|繁育中心|花艺坊|纸箱厂|清扫器厂|砂厂|回收站|机械配件部|大卖场|供热站|技术厂|加剂厂|蛋糕店|玻璃店|印花机店|调味品店|养猪场|装卸队|精密量具厂|租赁中心|彩灯厂|重钙厂|造纸厂|施工队|门窗店|网带厂|装饰处|装璜部|钢构厂|碳厂|制造中心|供热处|供热给水站|水泥型材厂|维修处|板材成型厂|箱包店|果蔬店|复印部|消防器材部|卫浴店|装饰阁|棉纺厂|花艺馆|彩印中心|编制中心|装箱厂|食品店|冷却器厂|干洗店|不锈钢装饰厂|垃圾清运队|水产行|便利店|机筛厂|展柜厂|运输部|化纤厂|水果店|建材预制厂|台板厂|粉灰厂|物资处|酒行|文印店|井盖厂|防御中心|花陶厂|施工中心|鲜肉店|石雕厂|钢琴城|嵌件厂|木业|肋钢厂|路灯厂|液压厂|交通设施厂|酿酒作坊|精米厂|花岗石厂|轮胎店|布艺|建材行|乐器行|保温被厂|小吃店|钢琴厂|被服厂|酒楼|食材行|壁纸店|涂料厂|海绵厂|铁艺厂|窗帘厂|维修队|变压器厂|建材生活馆|装饰城|玻璃钢厂|玻璃厂|布艺厂|按摩店|奶茶店|烧烤店|直销店|橡胶店|家具生活馆|科技生活馆|生活馆|铁艺店|沙场|木业厂|砂石厂|火锅店|销售|乐器店|食材店|小卖部|纽扣厂|涂料店|乐器坊|投资中心|棉纱厂|纺纱厂|浆纱厂|覆纱厂|翻纱厂|包纱厂|婚纱厂|纱厂|彩印店|给水站|织品厂|纽扣店|玻璃制品店|麻织品厂|毛织品厂|棉织品厂|塑料织品厂|工艺织品厂|海绵店|总汇|检测所|艺术团|农庄|代表处|水业|护理院|采石矿|乐队|复合板厂|水果精品行|文印社|建材|钻井队|推广站|塑胶日化厂|原种场|发射台|图片社|计算中心|养护队|装备厂|遮阳窗厂|太阳能店|组件厂|肥料厂|养护站|钮扣厂|装饰|商铺|绿化中心|卫浴厂|滤纸厂|窗帘行|修配部|劳务队|航运局|批发店|地板厂|布袋厂|制造部|木业店|杂店|设计所|书社|装潢中心|加工坊|铜艺厂|装订厂|肥厂|交易部|琴行|钢瓦厂|内饰件厂|文具店|文具|种苗场|预制厂|烘焙坊|设计行|鸡舍厂|制作站|物资部|评审中心|瓷艺厂|艺术厂|研发部|土鸡店|旧货行|吊顶店|维修装饰厂|直销处|工艺部|护理中心|磨具厂|回收中心|吸塑厂|彩瓦厂|金店|压瓦机厂|油漆店|金具厂|养鸡场|养牛场|焦化厂|体验馆|化工店|菜店|森林管护部|机械修造厂|制漆厂|造林队|食品坊|清洁部|家具|汽修部|材料批发处|拍卖行|套筒厂|养生会所|猪厂|钎具厂|烤鸭店|旗舰店|菜馆|面馆|饭店|监理部|电化厂|减速机厂|水塔厂|软管厂|礼品厂|工贸部|围栏厂|寿司店|螺丝店|农业园|花岗石矿|回收部|地板店|汽车服务会所|苗木中心|实业中心|地质调查所|商业城|美化中心|棉被店|切面店|洗衣房|花卉园|种养园|琉璃瓦厂|印刷社|技贸中心|福利厂|回弹仪厂|胶粘带厂|驾校|粘合剂厂|压力容器厂|卫生纸厂|大棚厂|中药饮片厂|生活用纸厂|塑剂厂|箱柜厂|食品调料厂|糕饼店|体检院|花木中心|电器行|画廊|雕塑厂|泵阀厂|陶瓷店|剧装厂|经营店|不锈钢制品店|电器成套厂|直营店|压缩机厂|餐具厂|直销中心|预制件厂|服装饰品行|园艺中心|编织厂|家居店|网吧|家具经营店|联轴器厂|装修中心|彩钢厂|技术院|科技城|苗种场|警服厂|太阳能厂|文体店|供热厂|手机店|化学厂|运输站|打字复印社|纱窗店|陶粒厂|营销部|纺织品店|试验园|家具中心|园艺行|保洁中心|连锁店|制修厂|汽车修理所|石粉厂|艺术雕塑厂|链轮厂|杂技团|图文社|花卉行|灯具城|礼服馆|修脚堂|粮油行|石灰厂|桶装水配送站|演出团|工艺美术厂|租赁店|采石场|园林部|米粉厂|海参店|毛毡厂|食品行|茶居店|颜料厂|灯罩店|修造厂|钢锉厂|清洗剂厂|早餐店|输出中心|健身馆|修复中心|酒庄|花鸟中心|水果行|图文快印中心|纸业店|休闲餐厅|眼镜店|副食店|冶金厂|制蓬厂|石料厂|窗饰厂|纸管厂|滤料厂|茶行|足浴中心|铁矿|淀粉厂|鞋服行|汽修中心|监理所|石厂|储运中心|果袋厂|拉丝厂|电箱厂|配套中心|定制中心|净水店|安装中心|购销中心|鞋料店|蔬菜大棚|煤厂|加工中心|安装店|干果店|能源店|石灰粉厂|采石厂|眼镜行|粮贸中心|汽车维修保养中心|花艺中心|评测中心|面包坊|会展中心|景观中心|翻译中心|木业中心|测绘中心|修理中心|输送中心|直销部|会议中心|招标中心|图书中心|制冷中心|厨具中心|护肤中心|垃圾清理中心|喷绘中心|布艺中心|建材中心|灯饰中心|配菜中心|文化中心|复垦中心|仪表成套厂|运输中心|文体中心|搬家中心|铝合金店|影像中心|代理中心|洗涤中心|信息安全测评中心|制衣中心|种猪场|电器中心|展示中心|清洁中心|礼品店|修理所|清洁队|卤肉店|家电店|测评中心|气动成套厂|布艺精品行|保养中心|钛镁合金店|茶具店|批发处|维修保养中心|马戏团|汽车精品行|菜市场|礼服店|调查所|猪场|投标中心|精品行|实验园|卫浴行|装饰精品行|美术厂|清理中心|石业厂|工艺精品行|服装精品行|编制厂|支公司|印刷所|法律顾问室|审计中心|区管委|总会|工会|合作中心|介绍所|水利工作站|检查中心|木厂|餐厅|支会|警卫处|工作站|诊所|安全办|书店|代营店|商店|面包店|医务室|渡假村|垃圾场|检测站|教育督导室|接待中心|轨道板场|科教站|民营企业站|科研所|职工食堂|洗涤店|协会|苕粉店|税务所|消防队|统计站|混沌店|大修厂|饮料厂|资源所|修理厂|美发店|理发店|车站|调拨站|分部|支局|互助会|油脂厂|分理处|政务中心|监管中心|股份公司|统计局|财政局|公安局|公安部|网络科技店|科技店|养殖场|土肥所|收储所|钳工店|园林所|家居城|木园店|人民医院|果园场|房产所|花房|耗材店|制造厂|彩印厂|公安厅|工作室|株式会社|电脑城|家电城|土肥站|卷烟厂|广播电视大学|有限公司|有限责任公司|保健所|体育场|维修站|看守所|人民法院|制品厂|检修厂|环卫所|畜牧站|大印电脑|动物园(?![区])|广电局|司法局|审批局|信访局|旅游局|粮食局|电视局|监察局|农林局|储备局|畜牧局|牧业局|社保局|博物院|检疫局|河务局|水利水电局|文物局|口岸局|计划生育局|勘查局|基金会|国土规建局|规划所药检所|教育局|铁路局|园林局|印刷厂|商场|住建局|移民局|工商局|配件店|红十字会|出版社|专卖店|科技局|事业局|畜牧场|美容店|文教店|家俬店|苗木场|试验场|繁育场|农牧场|农贸市场|花场|总场|停车场|家广场|俬私广场|园艺场|农场|国营林场|技示范场|风电场|垦殖场|茶场|漳浦盐场|加工厂|工厂|器材厂|炼铁厂|罐头厂|灯具厂|板材厂|旅游厅|地膜厂|评估局|采油厂|工艺厂|房管局|建材商行|民政局|合作社|联合社|职中|公墓|事务所|敬老院|油田|加油站|养护院|残联|二矿|管所|妇幼院|直属库|综合执法局|桥头村村委|交管局|采气厂|天文台|精神病院|体验店|儿童保育院|检验院|镇社|城管局|气象局|农机局|水务局|档案局|家俱店|米酒店|酒店|勘查院|维修行|数码城|医院|保健院|船级社|林业局|监局|托代理机构|电视台|电厂|管理所|建设局|检察院|电脑商行|创业基地|基地|资源厅|专营店|改革局|园林花圃|联通|福利院|机关事务所|机关|发展局|管理部|商务局|植物园(?![区])|工业园(?![区])|研究院|保护局|良种繁殖场|家具行|联合会|安置局|水利局|事务局|宝通科技|供电局|用品店|税务局|开发局|渔业局|管理服务局|国际饭店|棉花原种繁殖场|保障局|监测院|用品商店|办公厅|自然资源和规划局|测绘院|交通局|路政局|殡仪馆|贝斯特|中心医院|工程局|农业局|宾馆|环保局|财政厅|商贸中心|商贸行|商贸|商行|中大永盛|服务所|勘察院|休养所|运输局|农水局|委机要局|勘测局|林场|技术馆|交易所有限公司|四川易达|出版局|专利局|防治院|税局|建设厅|书院|地震局|车会所|房产局|绿化局|执法局|民防局|行政管理局|平苗圃|林业厅|卫生厅|渔场|花木场|设计研究院|苗圃|精品店|宣教局|（侨务）局|侨务局|招待所|工业和信息化局|合作联社|服务店|信息化局|医疗机构|美术馆|日报社|城建局|代建局|市容局|工务局|供销社|中心完小|机械厂|水利厅|招商局|公路管理署|规划局|检定测试院|检测院|土地房屋局|农牧局|环卫局|民政厅|烈士纪念馆|就业服务局|五金机电商店|经济贸易局|兽医局|银行|发展合作署|促进局|水文局|服务局|矫治所|纪念馆|能源局|管理署|维护店|联合总社|设计室|报社|文体局|疗养院|调查院|保护厅|合作经济社|运输厅|研究会|艺术馆|工作局|环境局|新体局|设备店|处理厂|水厂|净水厂|油厂|水泵厂|产权局|技术局|老干部局|干部局|商务厅|畜禽良种繁殖场|社会保险局|围垦局|教体局|农业厅|规划院|监测总站|测绘局|粮库|剧院|处理场|广新局|信息局|物价局|勘测院|农务局|电视总台|管理总站|器材店|工程院|发电厂|杂志社|地产|管理局|供销合作总社|医学院|学院|小学校|小学|幼儿园(?![区])|大学|学校|第三实小|发改委|人民政府|农牧厅|渔业厅|文化宫|海事处|纪检委|国资委|某单位|统战部|纪委|事业单位|党支部|党校|教育厅|中学校|收费站|人大|政法委员会|政法委|县建委|机场高速|团校|政府|一三一八单位|属单位|机关事业单位|卫计委|政协|市政府|股份合作公司|股份有限公司|财务核算中心|自然资源局|技术服务中心|农业农村局|自然保护区管护中心|管理委员会|乡村振兴局|公路服务中心|中学|档案馆|信访办公室|指挥部|村民委员会|保障服务中心|监狱|科技和教育体育局|林业和草原局|无线电监测站|住房和城乡建设部|边防公路机械化养护队|工程质量监督站|教育体育局|自然资源数据中心|教育和体育局|建设办公室|网球协会|指挥调度中心|发展和改革委员会|工作办公室|工业和信息化厅|卫生院|消防救援总队|文化和广电旅游体育局|体育局|卫生健康局|图书馆|卫生健康和体育局|纪律检查委员会|办公室|审计局|卫生监督所|文化广电旅游体育局|博物馆|氮肥厂|规划和自然资源局|卫生健康委员会|村委会|旅游和文化广电体育局|公园(?![区])|教育委员会|文化馆|边防检查站|抽水站|水文水资源局|科技馆|计划生育服务中心|综合执法大队|消防救援大队|文创和会展局|监督局|出入境边防检查总站|环境监测站|档案史志馆|城乡社区发展治理委员会|塑料厂|卫生计生监督局|考古工作队|海事局|指挥部办公室|配件厂|民族事务委员会|工程中心|监察中心|影视厅|科普工作队|中心校|市场监管局|公路通行费征收中心|水文中心|城市管理行政执法大队|教育科技体育局|人力资源和社会保障厅|林业工作站|管理站|管护中心|研究室|执法总队|超市|造船厂|修配厂|盆景协会|家俱城|木器厂|家私广场|家私城|家私行|气体厂|汽配厂|汽修厂|家私|综合超市|家具广场|(?<![江荆海厦天玉])门市部?|救援队|板焊厂|设备厂|行业协会|商城|维修厂|图书部|材料部|村民会员会|船厂|傢俬广场|家具馆|维修店|家具厂|公共卫生医疗中心|农业技术服务中心|委员会|社区居民委员会|卫生学校|建设指挥部|艺术职业学院|股份经济合作社|体育和旅游局|残疾人联合会|中医医院|市场监督管理局|儿童医院|人民检察院|职业技术学院|维护中心|电子政务中心|调配中心|教育馆|城管中心|业主委员会|流域中心|保健中心|品类部|监察大队|园林绿化中心|大数据局|老干局|商务和经济合作局|统筹中心|城市规划展览中心|土地和房屋征收局|军用供应站|部队|地质局|初中|管护局|结算中心|安养中心|监测站|应急中心|国土资源分局|文化和旅游发展委员会|体育馆|标准化中心|救护站|受理中心|装备部|生态环境厅|材料厂|发电站|科学技术协会|综合部|水利排灌养护站|血站|总院|煤矿|土肥工作站|土肥专业站|土肥生态站|土肥能源站|土肥植保站|园林管理所|园林绿化所|林业和园林局|园林绿化局|建设房产所|房产管理所|责任有限公司|卫生保健所|妇幼保健所|法院|环境卫生所|环境卫生管理所|畜牧兽医站|文化广电局|文化和旅游文物广电局|文体广电局|文化旅游广电局|文体旅游广电局|文物广电局|行政审批局|文化广电和旅游局|文化和旅游局|文物旅游局|文化广电旅游局|商务和粮食局|粮食和物资储备局|广播电视局|监督管理局|药品监督管理局|食品药品监督管理局|国有资产监督管理局|药品监管局|食品药品监管局|国有资产监管局|土地开发储备局|国土资源储备局|土地储备局|土地矿产资源储备局|畜牧兽医局|畜牧管理局|畜牧业管理局|林业和畜牧业管理局|农牧业局|农业和畜牧业局|畜牧业局|林牧业局|农业和畜牧业管理局|人力社保局|社会保险事业管理局|人力资源和社会保障局|社会保险基金管理局|社会保障局|植物保护检疫局|动植物检疫局|出入境检验检疫局|检验检疫局|林业有害生物防治检疫局|林业和草原有害生物防治检疫局|种苗和林业有害生物防治检疫局|水利水电工程局|水利水电工程管理局|水利水电施工管理局|水利水电工程移民局|港航和口岸管理局|港航口岸和渔业管理局|港口与口岸局|港航管理局|海洋口岸和港航管理局|商务和口岸管理局|陆港事务与口岸管理局|保税事务和口岸管理局|交通口岸管理局|卫生和计划生育局|地质矿产勘查局|地质勘查局|地质矿产勘查开发局|有色地质勘查局|有色地质矿产勘查局|冶金地质勘查局|环境地质勘查局|有色金属地质勘查局|地质勘查开发局|国土规划建设局|国土规划建设环保局|国土规划和城市建设局|规划国土建设局|规划国土和建设管理局|规划建设和国土资源局|规划建设和国土环保局|国土资源和规划建设局|国土资源局|公安消防救援大队|自然资源和规划建设局|教育科技局|科技教育局|教育科技和体育局|科教局|文教局|文化教育局|教育和文化旅游局|教育体育和文化旅游局|教育文化体育和旅游局|文化旅游和教育体育局|教育文化广电体育和旅游局|教育和文化广电局|教育体育和文化广电局|城市园林局|市政园林局|住房和建设局|住房和城乡建设局|住房和城市建设局|住房和城乡建设管理局|住房和建设管理局|生态移民局|水库和生态移民局|扶贫和移民局|水务和生态移民局|工商行政管理局|工商管理局|工业信息化和商务局|商务科技和工业信息化局|工业商务和信息化局|工信和商务局|工信和科技局|农牧和科技局|工业信息科技局|教育和科技局|农牧科技局|经济信息和科学技术局|工业和商务科技局|蚕桑事业局|社会保险事业局|社会事业局|旅游事业局|公用事业局|出版发行事业局|综合事业局|市政公用事业局|农机事业局|房产事业局|纳税评估局|国土房管局|住房保障和房屋管理局|房屋管理局|国土资源和房屋管理局|征收管理局|城镇管理综合执法局|城市行政综合执法局|城市综合执法局|城市管理综合执法局|商务综合执法局|生态综合执法局|综合行政执法局|城市管理综合行政执法局|城市管理行政执法局|市场综合行政执法局|行政执法局|城市管理和综合执法局|妇幼保健院|妇幼保健医院|公安交通管理局|公安局交通管理局|交通管理局|公共交通管理局|公安厅交通管理局|动物卫生服务所|卫生计生监督所|公共卫生监督所|儿保院|产品质量监督检验院|质量技术监督检验院|质量检验院|设备检验院|产品检验院|产品质量检验院|城市管理局|农业机械管理局|农机管理局|农机事业管理局|水务水利局|档案事业管理局|档案管理局|档案史志局|档案局（馆）|妇婴保健院|强制隔离戒毒所|强制戒毒所|隔离戒毒所|公安局戒毒所|公安戒毒所|自然资源和林业局|农业农村和林业局|园林和林业局|农业和林业局|市政和林业局|环境保护和林业局|林业管理局|安全监察局|安全生产监察执法监督局|安全监督管理局|质量技术监督局|市场和质量监督管理局|质量监督局|工商和质量监督管理局|市场和质量监督稽查局|质量技术监督管理局|工商质监局|车辆管理所|机动车辆技术管理所|非机动车辆管理所|机动车辆维修技术管理所|机动车辆维修管理所|机动车辆修配管理所|机动车辆交易管理所|机动车辆维修监督管理所|发展和改革局|发展改革局|劳动人事争议仲裁院|劳动人事仲裁院|人事劳动仲裁院正常|劳动人事争议调解仲裁院|政府机关|发展管理局|发展事业局|招商和商务局|科技工信和商务局|工业和商务局|经济合作和商务局|经济信息化和商务局|经济信息和商务局|投资促进和商务局|旅游和商务局|粮食和商务局|搬迁安置局|移民安置局|征迁安置事务管理局|安置工作管理局|移民安置管理局|房屋征收安置管理局|农业农村和水利局|住房城乡建设和水利局|农牧和水利局|林业和水利局|农牧科技和水利局|国土城建和水利局|水利工程管理局|水利管理局|地方税务局|税务管理局|开发管理局|渔业渔政管理局|海洋和渔业局|渔政局|渔业渔民渔船管理局|海洋与渔业局|交通运输和海洋局|林业和海洋局|海洋保护区管理局|海洋自然保护区管理局|医疗保障局|城乡居民医保管理局|医疗保险事业管理局|医疗保险管理局|医疗保险服务管理局|交通委员会路政局|路政管理局|公路管理局|科技和农业局|水务和农业局|海洋农业和水务局|农业农村和水务局|设施农业局|环境保护局|交通运输局|城乡建设和交通运输局|建设和交通运输局|城市管理和交通运输局|旅游文化和交通运输局|运输管理局|道路运输管理局|水务和交通运输管理局|运管局|农水科技局|机要保密局|机要和保密局|保密局|保密和机要局|水文水资源勘测局|广电新闻出版局|新闻出版局|文化出版局|文化广电新闻出版局|文体广电出版局|文化新闻出版局|新闻出版管理局|文化体育和新闻出版局|文化旅游和新闻出版局|专利管理局|财税局|科学技术和地震局|住房保障和房产管理局|房产管理局|住房保障和房产局|林业和城乡绿化局|林业和园林绿化局|园林绿化管理局|园林和绿化管理局|市政和绿化管理局|绿化和市容管理局|园林和林业绿化局|外事侨务局|民族宗教和外事侨务局|市容管理局|市容环境卫生局|市容环境卫生管理局|农业畜牧局|科学技术和农业畜牧局|市容环卫局|环境卫生局|园林绿化环境卫生局|城市环境卫生局|环境卫生管理局|投资合作和经济贸易局|工业和经济贸易局|投资促进局|招商促进局|商务和投资促进局|知识产权促进局|中小企业促进局|经济促进局|水利委员会水文局|水利管理局水文局|服务管理局|能源管理局|工业经济和能源局|工业和能源局|工作管理局|生态环境局|市容环境管理局|城乡环境管理局|应急管理和生态环境局|建设和生态环境局|城乡建设和生态环境局|住房建设和生态环境局|城市管理和生态环境局|产权管理局|技术管理局|老干部管理局|离退休干部局|离退休干部工作局|干部工作局|农林水利围垦局|围垦管理局|后海围垦管理局|信息管理局|物价监督管理局|粮食和物价局|发展改革和物价局|国有资产监督管理委员会|规资局|工信商务局|蚕桑局|公用局|综合局|征收局|卫监所|动物卫生所|保育院|质检院|安监局|质监局|车管所|发改局|劳动仲裁院|海洋局|医保局|机要局|水文勘测局|行政局|工信局|经贸局|网信办|卫健委|中医院|信访办|监管局|药监局|市监局|国资局|土储局|检验局|国土局|稽查局|函授学院|电信局|特勤局|美术社|私店|桥店|大道店|盛世广告|家居|花木园店|易购|防疫站|水文站|化院|博览园|规划所|药检所|工业品站|[东南西北]校|兽医站|村建站|[东南西北]院|作栽站|保持站|监理站|航空站|筹建处|农中|翻水站|后勤处|排水站|总站|实验高中|开发区|车间|水利站|电教站|军供站|中专|一中|保护站|规划处|电站|卫校|防保站|公路局|三校|鉴定站|鉴定所|工艺制作|百货.{0,2}店|百货|幼稚园|婴幼园|网络科技|社区|总校|招投标办|指导站|村委员会|总段|机械组|莫苏木|计装|数码|家[俬私]广场|广场店|广场|测量队|小组|工务处|街道|中心小学|中心|技术学校|化校园|市中区|总局|第[一二三四五六七八九十]{1,3}中学校|第[一二三四五六七八九十]{1,3}中学|[一二三四五六七八九]{1,3}中|卫生局|中心站|电子|总公司|公司|集团|本级事业|本级|住建委|幼儿园|酷泽西办公|电信|资源局|咨询院|书城|公路局办公室|植物园|工业园|贸易商行|广告装饰|泵站|桥家园|防治站|法制报|捐办公室|晨光科力普|配套办公室|开发中心//政法委|执法大队|航标|监测中心站|器材储运站|私城|有限公同|康复医院|口岸办|亿维|改造办公室|印刷.{0,3}店|检疫总站|文学馆|影视局|信息化厅|文化站|警务站|建设管理局|学区|寝园|交通站|联社|监督所|办公室致|政府园|电脑|检查站|开发试验区|警察局|联校|安监站|广播电台|润景|陵园|(?<!网上)超市|斑竹园镇|县教委|粮油日杂商店|海关总署|海关|消防站|卫生保健中心|区属单位|国营第一牧场|股份|动物园|出租站|科技总汇|文化厅|计划股|监督站|化工|实验局|文化局|装备站|电器城|办公用品总汇|一局|体校|电器|公园|指导所|市属单位|经济局|司法厅|处理站|消防局|促进会|水利所|监察所|分园|十八局|南蒲所|少年宫|行政服务大厅|康仙庄乡|水产局|整治局|体育厅|分站|曹庵镇|磁山镇|重点办|镇本级|计划处|建设站|园区办|园区|经济合作社|九江|绿化处|考试院|引航站|林业站|辅导室|交易站|职教中心|检疫站|气象中心|植检站|管教所|科技园|监督中心|打印部|门市|字行|文印|制图院|农办|侨办|设备站|鸡店|糖业|画院|创业园|血防站|护林站|控制站|水库管养场|管养场|中心学校|电教仪器站|救助站|交通警察支队|仪器站|龙泉完小|医疗生育工伤保险站|第十三完小|花坪管理区|教育招生考试|十二完小|医疗保障事务中心|中级人民法院|教委办|农机安全监理所|广播电视台|社会科学界联合会|自然资源事务中心|农经站|光荣院|学术杂志社|服务区|墓祠|二医院|慈善总会|凤凰二小|民族书画院|市委报道组|市委编办|市政协|交通公路稽查站|拘留所|人民剧场|民俗博物馆|职业教育社|产品质量监督检验站|法学会|广播电视传输发射中心|工程造价站|教科所|监督检验站|劳动就业中心|人才市场|农业机械监理所|气象台|三明七〇五台|水利水电工程质量技术站|水土保持试验站|台湾同胞接待站|文学艺术界联合会|医学会|供销社幼儿院|人民政府办公室|广播电视发射台|省政府|通讯杂志社|生活杂志社|建筑安全监察站|实验儿童学园|天主教爱国会|风景区|儿童学园|管理委员会办公室|伬艺传习所|公共资源交易服务中心|广播站|疾病预防控制中心|少年科学艺术宫|环境保护宣传教育处|建筑文明安全监察站|监察室|干休所|盲校|社会福利服务大楼|公园管理处|消毒站|海蚌场|机关事业社会保险中心|微波站|光泽电大|县科协|农科所|社会劳动保险|政府采购中心|第一幼儿园|北关完小|朝阳学校|县城南完小|芙蓉完小|卫生服务中心|人民完小|蓉峰完小|特教学校|广电体育局|市中心校|国家税务总局|华侨茶果场|水利会|第一人民医院|环境卫生管理站|西完小|畜禽水产良种保育站|地方志编纂室|第二人民医院|区组委会|工改办|回雁峰景区|九三学社|老干部活动中心|中职技校|婚姻登记处|社会福利院|松木经开区|体育科研辅导站|市委网信办|园林技术推广所|干部服务管理站|中国民主建国会|民主党|关工委|科学技术院|财税金融办|科协|测试采购单位|财政金融部|纪工委|戒毒康复所|产品质量监督检验授权站|产品质量监督授权站|地方志编纂院|地质院|园艺示范场|仪表试验所|树木园|强制医疗所|石膏矿留守处|省委老干部局|七六零二台|产品安全质量监督检验醴陵授权站|殡葬所|地震办|县委编办|农村能源环保站|财政国库|电力排灌站|贸促会|安全监理所|县编办|农工民主党|文联|劳动保障站|六九〇二台|故居管理办法室|市政设施维护处|智慧怀化项目资金户|城市建设档案室|机关工委|基础设施建设指挥部|珠泉完小|尊崇完小|消杀站|市政处|治超办|工伤保险站|社会劳动保险站|文化市场综合执法大队|电商办|体育总会|教育局教研室|西湖垸修防|血吸虫病预防站|血吸虫预防站|茶园街道|九中|文物管理|环卫站|林业技能开发站|老干部服务中心|商务粮食局|金融工作办公室|水库和扶贫易地安置中心|水库|区妇联|劳动失业保险站|园林处|血吸虫病预防控制站|督学责任区|示范区|渔业站|园艺站|媒体新闻社|血防院|电排站|纪工委监工委|华侨与儿园|不动产登记处|计量所|市级政府|土地收购储备中心新罗分中心|侨联|区委文明办|史志办|电视发射台|工业集中区管理委员|计生协|市政维护处|征地拆迁处|卢国良|市委办|种苗站|高腔传习所|自治县民小|妇联|长寿办|中波台|广播电视技术站|军供接待站|市委会|省委会|州委|县委文明办|乡音社|后佳学|康复院|财政信息站|建设工程质量安全站|通联站|轻工业总会|国土资源中心|县编委|纪律监察委|团委|县委网信办|南岳完小|精神病人疗养院|区良种场|接待科|重点项目资金保障组|合实验区|党工委|县医院|道安办|人民政府教育督导室|军休所|卫生消杀站|未成年人心理健康辅导站|环境卫生管理处|经济开发区|农业环保能源站|区工商联|区委统战部|区委组织部|区效能办|区政法委员会|城市建设档案錧|财贸干校|皮肤病防治院|公路建设养护中心|七〇五台|城市供水节水站|卫生消毒站|创卫办|水电排灌站|燃气办|水土保持所|外事办|托幼中心|供销合作联和社|园林绿化站|社保所|公园管理所|教育技术装备所|创建办|禁毒办|征地拆迁事务处|省国资委|省商务厅|十四中|十五中|塘园小学|市政公用事业处|水务处|市委政研室|公务用车管理中心|爱卫办|国卫办|水利局政府|国土资源所|经济作物站|车湖垸|纪检组|科信办|粮油作物站|两河口|木塘垸|审计室|桃师附小|桃源县田河|桃源县王家湾|刑事科学技术室|亿仕康专案|鱼苗鱼种场|桃源县漳江垸|政工室|桃源县专案二组|桃源县专案三组|桃源县陬溪垸|金融办|水文观测站|行政事业单位|桐庐县政府|团区委|人事档案室|迎春亭头堂九年制|昊家峪门票站|黄石寨景区管理委员|天子山门票站|吴家峪门票站|杨家界门票站|房屋征收补偿站|市纪律检查委员|附属小学|进校附小|县委编委办|县委统战部|县委组织部|市环境卫生管站|陵园管理处|西塘完小|家畜育种站|仰天湖大堤事务中心|电灌站|红霞完小|湘钢二校|湘钢一校|区总工会|排涝站|电化教育教学仪器站|慈爱园|质量安全监督站|教育科学技术院|传习所|农机监理所|统筹办|质监站|烤烟办|[一二三四五]小|信息站|勘测规划室|一医院|机关事务服务中心|编辑部|市编委办|畜禽良种繁育试验示范场|大东口电排|皮肤病防治|王家湖完小|沙堡洲完小|水管会|党史办|电排|农民素质教育办|农业示范场|血吸虫病防控制站|史志编纂室|建筑安全站|市政园林所|农业机械站|医院政府采购|县政府|完小|招生办|人民政府信访局|外资外援办|县委、县人民政府接待科|公安干校|航空护林站|建设工程造价站|水果开发示范场|国营机电排灌站|市政设施维护站|双牌一小|文物所|食品药品检验所|人民代表大会常务委会|漉湖芦苇场|南洞庭芦苇场|岳化四小|岳化一小|水委会|南湖渔场|社科联|治理站|繁殖场|自然资源所|农民创业园|血防办|市委文明办|侨茶果场|种场|广播电视监测台|建设工程质量监督站|救助管理站|实验小学|人防工程维护站|档案室|中心幼儿园|芝山堤防所|种子站|697台|市委老干部局|州委网信办|工作委员会办公室|县委政法委员会|区委办|县委老干部局|区委报道组|市委组织部|市委农村工作领导小组办公室|县委报道组|人民政府接待科|委督察室|机构编制委员会办公室|纪律检查委员|委员会党校|新闻网站|政协政|防汛物资储备站|公园管理一所|南方三小|区井办|区清办|区铜办|农村排渍站|卫生健康委|园林养护二所|园林养护一所|皮防所|兴宁完小|效能办|古峰二小|经济技术开发区管理委员会办公室|实验幼儿园|工商业联合会|省委党校|福建技师学院|闽剧院|闽江学院|六都医院|规划技术站|第四小学|国有林场|宁德市医院|电视微波站|东关小学|征地拆迁安置与征收补偿办公室|吸虫病防治领导小组|原种繁殖场|第七完全小学|第三十九完全小学|完全小学|楚雄692台|林业种籽苗木站|农业机械培训站|征收办|东川696台|对台办|鹿马登完小|定民族完小|工委办|委会办|区委|（研究）所|复印店|打印店|租赁行|道路站|配货店|打字店|老厨|书吧|音响店|印刷行|科技|文体用品行|文体城|百业|蛋糕屋|书屋|名店|专店|劳保店|打印社|打字社|男装店|家俬城|快印店|装潢|机械配件|制作店|中心店|大汉店|加盟店|城北店|中心市场|洲口店|零售店|刻字店|特产店|蔬菜摊|办公设备|印务|办公品店|用品批零|笔行|用品城|锁城|开锁|灯饰|桌椅批发桌椅批发|车务|鲜奶店|摄影店|茶莊|茶坊|肉店|实体店|花艺店|西点店|慈善会|分店|有限公";
//    private String X = "标|包|\\(包\\)|标段|标项|分标|分包|包号|标号|包件|包组|包段";
//    private String Y = "标|包|\\(包\\)|标段|标项|分标|分包|包号|标号|包件|包组|包段";
//
//    private String E = "拟中标人|首选中标候选人|第一中标人|第一成交供应商候选人|第一中签候选人|第1中标候选人|第一中标排序人|第一成交候选人|第一签约侯选人|第一成交候选单位|第一成交供应商|第一中标单位|第一中标（成交）候选人名称|第一承包候选人|第一中标侯选人|第一候选人|第一中签人|第一中标候选单位|第一排序人|第一中标排序单位名称|第一中标候选人|第一中标候选|第一中标候选中介机构|第一中选人|入选公司为|中标人1|成交人|第一名|第1名|（第一名）|排序第一|综合评分排名第一|第一：|中标人（乙方）|供应商（代理商）|中选供应商|中选中介机构名称|中选中介机构|合同乙方名称|中标（成交）供应商（全称）|推荐成交报价单位|推荐成交人|推荐中标人|中标候选人单位|中标候选人：|中标候选人|中标人:|推荐中标候选人|推荐签约单位|签约单位|中标（成交）供应商名称|中标厂商|中标供商|建议授标单位|拟定供应商名称|拟中标供应商|拟中标单位|拟中选单位|拟中选人|拟成交人|成交方|拟成交方|拟定中标供应商|拟定中标单位|拟定中选单位|拟成交企业|拟定中标人|拟定中选人|预中标供应商|预中标供应商名称|唯一供应商及地址|单一来源采购供应商|拟定单一来源采购供应商的名称、地址|单一来源供应商|中标人-牵头单位|中标人：牵头单位|履约供应商名称|竞得人|竞得单位|受让人|牵头人|受让单位|成交商家|成交供应商和电话|（供应商）|（中标人）名称|竞得人（中标人）|成交候选供应商|承包单位|项目承接主体|竞标人|竞价单位|供应商（乙方）|中标/成交供应商名称、地址及报价|中标单位及中标金额、中标单位、中标价格（元）|成交单位/地址|联合体牵头方|经评标委员评定，拟定由|预中标（成交）人名称|并经我单位确认的中标人|推荐的候选谈判单位|最终确定的中标人|排名第一的|成交报价人名称|成交候选单位|本项目的成交供应商|中标侯选人|成交供应商名称|中标供应商|成交供应商|成交电商|成交服务商|中标施工方|包1的中选人|最终抽中的中选人|中标人全称|中标单位|采购项目的中标人|中标人名称|中标人|中标商|拟定采用供应商|拟定的唯一供应商名称、地址|（入围供应商）|供应商|原承租方|中标企业|成交单位|中包人|乙方|供应单位|承包人名称|承包人|中签单位|中标应商名称|成交竞租人|中标/中选单位|中标意向单位|中标人名单|中选机构名称|中选企业|中选候选人|中标（成交）单位|成交候选人|侯选/中标供应商|采购中标候选书商|推荐中标供应商|中标（成交）供应商|自报价厂商|设备的厂商|中选单位|承包单位名称|中标候选单位|最终确定中标人|预中标候选人|拟中标（成交）人|中标（成交）人|第二包供货候选单位|确定中标的监理机构|成交企业|第一包|第1包|（第一包）|中标回收商|供应商（全称）|供方|流入方名称|承包商|成交商|确定中标的设计单位|成交公司|推荐中标候选单位|供货商|通过单位|中标公司|中标人（成交供应商）|成交供应商的名称|候选人|投标人名称|投标人|候选供应商|中标供应商名称、联系地址及中标金额|报价单位|承接单位|竞得入选人|投标单位|投标单位名称|侯选单位|成交厂商|土地使用权人|中选人推荐如下|中选人|中标厂家|（乙方）|供应商名称|中选承包商|中选中介服务机构|拟中商人|供货单位|施工单位|服务商名称|供应商名单|候选单位名称|一标段|1包|1标段|1标|A包|标项一|中介服务单位|选取的中介服务机构|续租人|承包候选人|中标公司名单|中标方|受让方|候选人排名投标商名称制造商制造商国别及地区|投标商名称|中标供应商简介|服务机构|成交供应商公布如下|成交供应商信息|拟定供应商信息|投标方-已中标|投标方|已中标|供应商名称(乙方)|中标情况-单位名称|承办单位|直购企业|单位名称/姓名|中标竞买人名称|中标单位-单位名称|中标候选单位-单位名称|第一中标候选人-单位名称|服务单位|拟中标单位-单位名称|中标供应商名称|中选单位-单位名称|中选机构|买受人|中标信息|成交信息|成交供应商及成交金额|成交供应商名称、成交金额|成交供应商名称 成交金额|成交供应商名称、地址及成交金额|中标供应商名称、金额|竞标单位|中标供应商名称及金额|预中标候选人及预中标金额|中标人名单公告如下|中标供应商如下|中选候选人依次为|供应商名称及其地址|符合要求最低报价|中标候选人名单公示如下|成交人分别|中标候选人，分别是：|拟谈判单位|投标单位 标段名称 报价（元） 排序 备注 1|中标候选单位名次 1|序号 中标候选单位名称 中标候选单位名次|中价报价方名称|中商人|拟选用单位|中标单位名称|供应商(乙方)|中介机构名称-中选|竞投单位|中标公告 致：|确定入库名单如下|供货服务商(乙方)|中标、成交供应商名称|第一中选候选人|中标供货商|中标（成交）|第一成交|第一中标|第一供应商|B包|C包|D包|E包|F包|G包|二标段|三标段|四标段|五标段|六标段|2标段|3标段|4标段|5标段|6标段|一标包|二标包|三标包|四标包|五标包|六标包|1标包|2标包|3标包|4标包|5标包|6标包|包：|标：|包:|标:|排序第一的单位名称";
//    private String F = "公路段|教研室|体育处|养护段|建筑段|保障处|装备处|法规科|通信段|油料处|电务段|绿化所|客运站|车辆段|公寓段|工电段|备件科|客运段|组织部|销售部|销售店|监察队|经理部|供应段|车务段|供电段|维修段|电器组|执行三处|公路处|门诊部|经营部|管理段|项目部|后勤部|交警队|市政工程维修处|通电部|接待处|填埋场|土地征地拆迁指挥部|工务署|服务处|航道处|秩序司|安装队|信息院|村民组|机务段|国有土地上房屋征收处|流标|废标|城市管理执法大队|不足三家|不足3家|供应科|计划科|筹备处|检验处|物流部|监管司|保险处|物管会|管理队|卫生队|秘书处|管理科|军分区|驻在组|执法队|联谊会|活动室|运行处|建管处|变电队|运输处|水电队|公证处|检定所|排灌所|监理处|装饰部|环境保护部|化校园(?![区])|管理处|电子商行|设计院|经销处|直属处|建司|审计处|机动部|工作部|工程队|执法支队|经销部|工程建设处|警察大队|地质大队|工程处|服务部|监督处|工程部|测绘所|航标处|支队|交易所|宣传部|储备库|保障部|设备处|监测所|联防队|分公司|车船队|调查队|文印部|地质队|服务队|建设处|海市政工程维修处|武装部|原料部|防治所|检验所|测试所|控制所|管理三所|卫生所|研究所|戒毒所|养护所|督检测所|洞井街道|解放街道|海军某部|十三分部|分社|展销部|科技部|能源部|分行|设备科|二厂|环卫处|实验室|村分站|计划经营科|教育所|编码所|研究生院|修缮队|分园(?![区])|通讯社|南支队|城建处|预报台|农工部|房屋征收管理事务处|分院|旅社|港务|动车所|医疗所|参事室|路灯所|工商联|研究传承院|军干所|仲裁院|（拘留）所|北支队|广告部|印务部|批发部|装潢部|印刷部|快印部|制作部|电脑部|图文部|维修部|修理部|设计部|供应部|测绘大队|门市部|百货部|作业[一二三四五六七八九十\\d]{1,3}队|工务段|事业部|支行|分所|大队|分校|总队|供应站|转播台|药房|制梁场|营业厅|炒货厂|食品厂|包装厂|热锻厂|零部件厂|电器厂|部件厂|机床厂|刹车片厂|玩具厂|摩配店|雕刻店|电子厂|陶瓷厂|通讯行|总厂|附件厂|五金厂|压件厂|炒货店|模具厂|加工店|加工部|电动车店|加工点|刀具厂|机械店|供应处|车灯厂|灯泡厂|灯镜厂|汽车用品行|电机厂|胶带厂|仪表厂|车行|电子材料行|滤清器厂|离合器厂|发动机厂|电瓷厂|防锈剂厂|冲件厂|服务广场|旅馆|购销部|服装店|铸造厂|汽配行|织造厂|锁厂|用品厂|服务站|厨柜厂|手袋厂|车辆配套厂|综合厂|车辆厂|机带厂|电线厂|展销柜|车镜厂|车库门厂|装饰装修处|橱柜店|橡塑厂|电控门厂|翻新厂|皮具厂|剪刀厂|车件厂|轮毂厂|零件厂|轴承厂|厨房用具厂|锻造厂|图文店|橡胶厂|工具厂|车筐厂|塑料店|贸易行|俱乐部|塑胶厂|装饰件厂|五金压铸厂|针织厂|电车线厂|座套厂|收购站|汽配部|密封件厂|桥箱厂|轴瓦厂|蓄电池厂|汽车零件部|锁业|装饰广场|塑料喷涂厂|线闸厂|商坊|线束厂|模具店|销售处|弹簧厂|贸易部|运输队|传动件厂|手拖配套厂|装具厂|座椅厂|坐垫厂|聚氨酯厂|床垫厂|健身器材配套厂|胶合板厂|填料厂|衬垫厂|营业部|胶管阀厂|服饰店|服装部|服装厂|阀门厂|制线厂|钢管厂|布料店|工艺品材料行|铸件厂|皮革店|绣花厂|鞋店|皮革行|鞋行|布行|展示架厂|玩具店|鞋业行|制帽厂|服饰厂|鞋厂|鞋帽厂|鞋业|磨床厂|饰品店|针织品厂|制袋厂|配件行|饰品厂|窗业|帽厂|软垫厂|五金线材厂|藤椅厂|沙发厂|家俱厂|五金行|开发部|建材店|制药厂|药店|液压机具厂|石膏板厂|工量具厂|纸品行|快餐店|构件厂|通讯|花艺厂|钢材行|喷塑厂|加工场|吹瓶厂|防水店|工艺品厂|铸钢厂|渔具厂|书画院|花园|工具店|仪器厂|油封厂|铜铝管拉制厂|泵厂|衬衫店|材料店|齿轮减速器厂|酒厂|首饰厂|电缆厂|五金店|废品收购店|冲压厂|纸品厂|网厂|洁具厂|制剂厂|陶器厂|影楼|瓷厂|雕刻部|压机厂|切割行|设备行|面粉厂|电筒厂|杂货店|配色行|辅料店|影像室|制衣厂|模型厂|皮件厂|宠物店|海味行|电炉厂|音像店|电子出版物坊|绣品厂|抽纱厂|纺织厂|箱包厂|压包厂|厨具店|五金标件厂|广告店|广告|童装行|服务社|砂轮厂|园艺部|工艺社|加工行|玉器店|端砚厂|工艺品店|时装厂|时装店|灯饰店|服装辅料行|灯饰行|熔断器厂|保护器厂|批发站|电器店|辅料厂|机器厂|门业|运香厂|制作厂|化学品厂|助剂厂|工具行|厨具厂|耐材厂|毛刷厂|辅机厂|养蜂场|糖果厂|皮毛厂|煮饼厂|锅炉厂|购物|塑料行|家具城|家具店|机配厂|炉具厂|门厂|器械店|良种场|综合店|商社|电脑店|电脑行|橱柜|花炮厂|货运部|海水素厂|糖厂|水电站|化妆品厂|电子商柜|触点厂|器件行|厨俱厂|灯饰厂|购销站|五金部|制钉厂|门窗厂|链条厂|添加剂厂|建材厂|风机厂|制管厂|租赁站|收桥架厂|电料厂|传媒|法兰厂|元件厂|药行|邮社|文化传媒机构|铝型材厂|铜管厂|布艺店|汽配|雕刻厂|制面厂|种植场|苗莆|旅行社|油漆厂|装配厂|用减震器厂|刃具厂|家纺厂|压铸厂|活动板房厂|制刷厂|纱窗厂|床单厂|调查规划设计队|布厂|轧延厂|床具厂|装饰材料行|竹帘厂|工艺行|电子行|人造花厂|熔炼厂|花岗岩厂|螺钉厂|吹塑厂|银饰行|设计店|渔具店|艺术作坊|机械配套厂|皮革厂|胶袋厂|龙骨厂|广告材料行|胶板厂|砖厂|工艺店|碳素厂|无纺布材料行|色素厂|花店|童装店|胶粘剂厂|织布厂|器械厂|肉食店|纤维素厂|药材行|首饰行|手套厂|鞋业厂|童装厂|座垫厂|仪器店|锁具厂|切割厂|表件厂|茶庄|工矿配套厂|管件配套厂|泵阀配套厂|摩配厂|卷闸门厂|印染材料行|清洁用品部|生茶厂|屠宰场|电热技术配套厂|橱柜厂|钓具店|帆布厂|网栏厂|刺绳厂|粮油店|不锈钢电动门厂|拉闸铁门厂|牧场|燃料厂|拉闸门厂|炭素厂|陶瓷配套厂|钢材厂|玉器厂|陶瓷设备配套厂|布料行|防水布厂|弹簧配套厂|糖果店|保温材料行|制冷设备配套厂|洁具配套厂|家用电器配套厂|印刷材料行|模具配套厂|电力机械配套厂|电动车配套厂|齿轮配套厂|丝印材料行|神农素厂|五金|电化材料行|照明店|服装材料行|配套厂|园艺店|汽车配套厂|构建厂|布料厂|轮胎行|流量计仪表配套厂|建筑材料行|杂货铺|尿素厂|制砂场|装修处|电梯配套厂|机电配套厂|电工材料行|金属构件配套厂|五金阀门材料行|电子配套厂|五金材料行|机械设备材料行|金属材料行|织带厂|毛巾厂|文件柜厂|炉管厂|纺织品厂|开关厂|租赁部|代理店|家居馆|钢件厂|工程维修队|商厦|装潢店|器材行|乐器厂|木炭厂|结构厂|石材厂|软装生活馆|水泥预制厂|液化气站|批发城|树脂厂|家纺店|乐琴行|水箱厂|净水剂厂|剧团|经销店|餐饮店|活性炭厂|奇石场|水磨石厂|毛织厂|砂石场|金属线材厂|元器件厂|塑件厂|胶印厂|桶装水店|窗帘店|波纹管厂|成衣档|精选厂|家居生活馆|实验厂|搅拌站|服装鞋帽店|硬质合金厂|电动车厂|喷织厂|电杆厂|管件厂|灯具店|散热器厂|标牌厂|采供站|通风管道厂|家居广场|布艺行|经营处|生肉店|颜料行|装饰店|印刷制版厂|花灯厂|砂场|封条厂|粮行|种植园|花艺坊|纸箱厂|清扫器厂|砂厂|回收站|机械配件部|大卖场|供热站|技术厂|加剂厂|蛋糕店|玻璃店|印花机店|调味品店|养猪场|装卸队|精密量具厂|彩灯厂|重钙厂|造纸厂|施工队|门窗店|网带厂|装饰处|装璜部|钢构厂|碳厂|供热处|供热给水站|水泥型材厂|维修处|板材成型厂|箱包店|果蔬店|复印部|消防器材部|卫浴店|装饰阁|棉纺厂|花艺馆|装箱厂|食品店|冷却器厂|干洗店|不锈钢装饰厂|垃圾清运队|水产行|便利店|机筛厂|展柜厂|运输部|化纤厂|水果店|建材预制厂|台板厂|粉灰厂|酒行|文印店|井盖厂|花陶厂|鲜肉店|石雕厂|钢琴城|嵌件厂|木业|肋钢厂|路灯厂|液压厂|交通设施厂|酿酒作坊|精米厂|花岗石厂|轮胎店|布艺|建材行|乐器行|保温被厂|小吃店|钢琴厂|被服厂|酒楼|食材行|壁纸店|涂料厂|海绵厂|铁艺厂|窗帘厂|维修队|变压器厂|建材生活馆|装饰城|玻璃钢厂|玻璃厂|布艺厂|按摩店|奶茶店|烧烤店|直销店|橡胶店|家具生活馆|科技生活馆|生活馆|铁艺店|沙场|木业厂|砂石厂|火锅店|销售|乐器店|食材店|小卖部|纽扣厂|涂料店|乐器坊|棉纱厂|纺纱厂|浆纱厂|覆纱厂|翻纱厂|包纱厂|婚纱厂|纱厂|彩印店|给水站|织品厂|纽扣店|玻璃制品店|麻织品厂|毛织品厂|棉织品厂|塑料织品厂|工艺织品厂|海绵店|总汇|检测所|艺术团|农庄|代表处|水业|护理院|采石矿|乐队|复合板厂|水果精品行|文印社|建材|钻井队|推广站|塑胶日化厂|原种场|发射台|图片社|养护队|装备厂|遮阳窗厂|太阳能店|组件厂|肥料厂|养护站|钮扣厂|装饰|商铺|卫浴厂|滤纸厂|窗帘行|修配部|劳务队|批发店|地板厂|布袋厂|制造部|木业店|杂店|设计所|书社|加工坊|铜艺厂|装订厂|肥厂|交易部|琴行|钢瓦厂|内饰件厂|文具店|文具|种苗场|预制厂|烘焙坊|设计行|鸡舍厂|制作站|瓷艺厂|艺术厂|研发部|土鸡店|旧货行|吊顶店|维修装饰厂|直销处|工艺部|磨具厂|吸塑厂|彩瓦厂|金店|压瓦机厂|油漆店|金具厂|养鸡场|养牛场|焦化厂|体验馆|化工店|菜店|森林管护部|机械修造厂|制漆厂|造林队|食品坊|清洁部|家具|汽修部|材料批发处|拍卖行|套筒厂|养生会所|猪厂|钎具厂|烤鸭店|旗舰店|菜馆|面馆|饭店|监理部|电化厂|减速机厂|水塔厂|软管厂|礼品厂|工贸部|围栏厂|寿司店|螺丝店|农业园|花岗石矿|回收部|地板店|汽车服务会所|地质调查所|商业城|棉被店|切面店|洗衣房|花卉园|种养园|琉璃瓦厂|印刷社|福利厂|回弹仪厂|胶粘带厂|驾校|粘合剂厂|压力容器厂|卫生纸厂|大棚厂|生活用纸厂|塑剂厂|箱柜厂|食品调料厂|糕饼店|体检院|电器行|画廊|雕塑厂|泵阀厂|陶瓷店|剧装厂|经营店|不锈钢制品店|电器成套厂|直营店|压缩机厂|餐具厂|预制件厂|服装饰品行|编织厂|家居店|网吧|家具经营店|联轴器厂|彩钢厂|技术院|科技城|苗种场|警服厂|太阳能厂|文体店|供热厂|手机店|化学厂|运输站|打字复印社|纱窗店|陶粒厂|营销部|纺织品店|试验园|园艺行|连锁店|制修厂|汽车修理所|石粉厂|艺术雕塑厂|链轮厂|杂技团|图文社|花卉行|灯具城|礼服馆|修脚堂|粮油行|石灰厂|桶装水配送站|演出团|工艺美术厂|租赁店|采石场|园林部|米粉厂|海参店|毛毡厂|食品行|茶居店|颜料厂|灯罩店|修造厂|钢锉厂|清洗剂厂|早餐店|健身馆|酒庄|水果行|纸业店|休闲餐厅|眼镜店|副食店|冶金厂|制蓬厂|石料厂|窗饰厂|纸管厂|滤料厂|茶行|铁矿|淀粉厂|鞋服行|监理所|石厂|果袋厂|拉丝厂|电箱厂|净水店|鞋料店|蔬菜大棚|煤厂|安装店|干果店|能源店|石灰粉厂|采石厂|眼镜行|面包坊|直销部|仪表成套厂|铝合金店|种猪场|礼品店|修理所|清洁队|卤肉店|家电店|气动成套厂|布艺精品行|钛镁合金店|茶具店|批发处|马戏团|汽车精品行|菜市场|礼服店|调查所|猪场|精品行|实验园|卫浴行|装饰精品行|美术厂|石业厂|工艺精品行|服装精品行|编制厂|支公司|印刷所|法律顾问室|总会|工会|介绍所|水利工作站|木厂|餐厅|支会|警卫处|工作站|诊所|书店|代营店|商店|面包店|医务室|渡假村|垃圾场|检测站|教育督导室|轨道板场|科教站|民营企业站|科研所|职工食堂|洗涤店|协会|苕粉店|税务所|消防队|统计站|混沌店|大修厂|饮料厂|修理厂|美发店|理发店|车站|调拨站|分部|互助会|油脂厂|分理处|股份公司|网络科技店|科技店|养殖场|土肥所|收储所|钳工店|园林所|家居城|木园店|人民医院|果园场|房产所|花房|耗材店|制造厂|彩印厂|工作室|株式会社|电脑城|家电城|土肥站|卷烟厂|广播电视大学|有限公司|有限责任公司|保健所|体育场|维修站|看守所|制品厂|检修厂|环卫所|畜牧站|大印电脑|动物园(?![区])|博物院|基金会|规划所药检所|印刷厂|商场|配件店|红十字会|出版社|专卖店|畜牧场|美容店|文教店|家俬店|苗木场|试验场|繁育场|农牧场|农贸市场|花场|总场|停车场|家广场|俬私广场|园艺场|农场|国营林场|技示范场|风电场|垦殖场|茶场|漳浦盐场|加工厂|工厂|器材厂|炼铁厂|罐头厂|灯具厂|板材厂|旅游厅|地膜厂|采油厂|工艺厂|建材商行|合作社|联合社|公墓|事务所|敬老院|油田|加油站|养护院|残联|二矿|管所|妇幼院|直属库|采气厂|天文台|精神病院|体验店|儿童保育院|检验院|镇社|家俱店|米酒店|酒店|勘查院|维修行|数码城|医院|保健院|船级社|托代理机构|电视台|电厂|管理所|电脑商行|创业基地|基地|专营店|园林花圃|联通|福利院|机关事务所|机关|管理部|植物园(?![区])|工业园(?![区])|研究院|良种繁殖场|家具行|联合会|宝通科技|用品店|国际饭店|棉花原种繁殖场|监测院|用品商店|测绘院|殡仪馆|贝斯特|宾馆|商贸行|商贸|商行|服务所|勘察院|休养所|林场|技术馆|交易所有限公司|四川易达|防治院|书院|车会所|平苗圃|渔场|花木场|设计研究院|苗圃|精品店|招待所|合作联社|服务店|医疗机构|美术馆|日报社|供销社|机械厂|公路管理署|检定测试院|检测院|烈士纪念馆|五金机电商店|银行|发展合作署|矫治所|纪念馆|管理署|维护店|联合总社|设计室|报社|疗养院|调查院|合作经济社|研究会|艺术馆|设备店|处理厂|水厂|净水厂|油厂|水泵厂|畜禽良种繁殖场|规划院|监测总站|粮库|剧院|处理场|勘测院|电视总台|管理总站|器材店|工程院|发电厂|杂志社|地产|供销合作总社|医学院|学院|幼儿园(?![区])|大学|学校|第三实小|人民政府|文化宫|海事处|某单位|统战部|事业单位|收费站|人大|机场高速|团校|政府|一三一八单位|属单位|机关事业单位|政协|市政府|股份合作公司|股份有限公司|档案馆|指挥部|监狱|无线电监测站|住房和城乡建设部|边防公路机械化养护队|工程质量监督站|网球协会|卫生院|消防救援总队|图书馆|卫生监督所|博物馆|氮肥厂|公园(?![区])|文化馆|边防检查站|抽水站|科技馆|综合执法大队|消防救援大队|出入境边防检查总站|环境监测站|档案史志馆|塑料厂|考古工作队|配件厂|影视厅|科普工作队|城市管理行政执法大队|林业工作站|管理站|研究室|执法总队|超市|造船厂|修配厂|盆景协会|家俱城|木器厂|家私广场|家私城|家私行|气体厂|汽配厂|汽修厂|家私|综合超市|家具广场|(?<![江荆海厦天玉])门市部?|救援队|板焊厂|设备厂|行业协会|商城|维修厂|图书部|材料部|村民会员会|船厂|傢俬广场|家具馆|维修店|家具厂|卫生学校|建设指挥部|艺术职业学院|股份经济合作社|残疾人联合会|儿童医院|职业技术学院|教育馆|品类部|监察大队|军用供应站|监测站|体育馆|救护站|装备部|材料厂|发电站|科学技术协会|综合部|水利排灌养护站|血站|总院|煤矿|土肥工作站|土肥专业站|土肥生态站|土肥能源站|土肥植保站|园林管理所|园林绿化所|建设房产所|房产管理所|责任有限公司|卫生保健所|妇幼保健所|环境卫生所|环境卫生管理所|畜牧兽医站|妇幼保健院|妇幼保健医院|动物卫生服务所|卫生计生监督所|公共卫生监督所|儿保院|产品质量监督检验院|质量技术监督检验院|质量检验院|设备检验院|产品检验院|产品质量检验院|妇婴保健院|强制隔离戒毒所|强制戒毒所|隔离戒毒所|车辆管理所|机动车辆技术管理所|非机动车辆管理所|机动车辆维修技术管理所|机动车辆维修管理所|机动车辆修配管理所|机动车辆交易管理所|机动车辆维修监督管理所|劳动人事争议仲裁院|劳动人事仲裁院|人事劳动仲裁院正常|劳动人事争议调解仲裁院|政府机关|卫监所|动物卫生所|保育院|质检院|车管所|劳动仲裁院|函授学院|美术社|私店|桥店|大道店|盛世广告|家居|花木园店|易购|防疫站|水文站|化院|博览园|规划所|药检所|工业品站|[东南西北]校|兽医站|村建站|[东南西北]院|作栽站|保持站|监理站|航空站|筹建处|翻水站|后勤处|排水站|总站|开发区|车间|水利站|电教站|军供站|保护站|规划处|电站|卫校|防保站|三校|鉴定站|鉴定所|工艺制作|百货.{0,2}店|百货|幼稚园|婴幼园|网络科技|社区|总校|指导站|总段|机械组|莫苏木|计装|数码|家[俬私]广场|广场店|广场|测量队|工务处|街道|技术学校|化校园|电子|总公司|公司|集团|本级事业|本级|幼儿园|电信|咨询院|书城|植物园|工业园|贸易商行|广告装饰|泵站|桥家园|防治站|法制报|晨光科力普|执法大队|航标|器材储运站|私城|有限公同|康复医院|亿维|印刷.{0,3}店|检疫总站|文学馆|文化站|警务站|学区|寝园|交通站|联社|监督所|政府园|电脑|检查站|开发试验区|联校|安监站|广播电台|润景|陵园|(?<!网上)超市|斑竹园镇|粮油日杂商店|海关总署|海关|消防站|区属单位|国营第一牧场|股份|动物园|出租站|科技总汇|计划股|监督站|化工|装备站|电器城|体校|电器|公园|指导所|市属单位|处理站|促进会|水利所|监察所|分园|南蒲所|少年宫|康仙庄乡|分站|曹庵镇|磁山镇|镇本级|计划处|建设站|园区|经济合作社|九江|绿化处|考试院|引航站|林业站|辅导室|交易站|检疫站|植检站|管教所|科技园|打印部|门市|字行|文印|制图院|设备站|鸡店|糖业|画院|创业园|血防站|护林站|控制站|水库管养场|管养场|电教仪器站|救助站|交通警察支队|仪器站|龙泉完小|医疗生育工伤保险站|第十三完小|花坪管理区|教育招生考试|十二完小|农机安全监理所|广播电视台|社会科学界联合会|农经站|光荣院|学术杂志社|服务区|墓祠|二医院|慈善总会|凤凰二小|民族书画院|市政协|交通公路稽查站|拘留所|人民剧场|民俗博物馆|职业教育社|产品质量监督检验站|法学会|工程造价站|教科所|监督检验站|人才市场|农业机械监理所|气象台|三明七〇五台|水利水电工程质量技术站|水土保持试验站|台湾同胞接待站|文学艺术界联合会|医学会|供销社幼儿院|广播电视发射台|省政府|通讯杂志社|生活杂志社|建筑安全监察站|实验儿童学园|天主教爱国会|风景区|儿童学园|伬艺传习所|广播站|少年科学艺术宫|环境保护宣传教育处|建筑文明安全监察站|监察室|干休所|盲校|社会福利服务大楼|公园管理处|消毒站|海蚌场|微波站|光泽电大|县科协|农科所|社会劳动保险|第一幼儿园|北关完小|朝阳学校|县城南完小|芙蓉完小|人民完小|蓉峰完小|特教学校|华侨茶果场|水利会|第一人民医院|环境卫生管理站|西完小|畜禽水产良种保育站|地方志编纂室|第二人民医院|回雁峰景区|九三学社|婚姻登记处|社会福利院|松木经开区|体育科研辅导站|园林技术推广所|干部服务管理站|科学技术院|科协|戒毒康复所|产品质量监督检验授权站|产品质量监督授权站|地方志编纂院|地质院|园艺示范场|仪表试验所|树木园|强制医疗所|石膏矿留守处|七六零二台|产品安全质量监督检验醴陵授权站|殡葬所|农村能源环保站|电力排灌站|贸促会|安全监理所|文联|劳动保障站|六九〇二台|市政设施维护处|智慧怀化项目资金户|城市建设档案室|基础设施建设指挥部|珠泉完小|尊崇完小|消杀站|市政处|工伤保险站|社会劳动保险站|文化市场综合执法大队|体育总会|西湖垸修防|血吸虫病预防站|血吸虫预防站|茶园街道|文物管理|环卫站|林业技能开发站|水库|区妇联|劳动失业保险站|园林处|血吸虫病预防控制站|督学责任区|示范区|渔业站|园艺站|媒体新闻社|血防院|电排站|华侨与儿园|不动产登记处|计量所|市级政府|侨联|电视发射台|计生协|市政维护处|征地拆迁处|卢国良|种苗站|高腔传习所|自治县民小|妇联|广播电视技术站|军供接待站|乡音社|后佳学|康复院|建设工程质量安全站|通联站|轻工业总会|南岳完小|精神病人疗养院|区良种场|接待科|重点项目资金保障组|合实验区|县医院|人民政府教育督导室|军休所|卫生消杀站|未成年人心理健康辅导站|环境卫生管理处|经济开发区|农业环保能源站|区工商联|城市建设档案錧|皮肤病防治院|七〇五台|城市供水节水站|卫生消毒站|水电排灌站|水土保持所|供销合作联和社|园林绿化站|公园管理所|教育技术装备所|征地拆迁事务处|市政公用事业处|水务处|经济作物站|车湖垸|纪检组|粮油作物站|两河口|木塘垸|审计室|桃师附小|桃源县田河|桃源县王家湾|刑事科学技术室|亿仕康专案|鱼苗鱼种场|桃源县漳江垸|政工室|桃源县专案二组|桃源县专案三组|桃源县陬溪垸|水文观测站|行政事业单位|桐庐县政府|人事档案室|迎春亭头堂九年制|昊家峪门票站|天子山门票站|吴家峪门票站|杨家界门票站|房屋征收补偿站|进校附小|市环境卫生管站|陵园管理处|西塘完小|家畜育种站|电灌站|红霞完小|湘钢二校|湘钢一校|区总工会|排涝站|电化教育教学仪器站|慈爱园|质量安全监督站|教育科学技术院|传习所|农机监理所|质监站|[一二三四五]小|信息站|勘测规划室|一医院|编辑部|畜禽良种繁育试验示范场|大东口电排|皮肤病防治|王家湖完小|沙堡洲完小|水管会|电排|农业示范场|血吸虫病防控制站|史志编纂室|建筑安全站|市政园林所|农业机械站|县政府|完小|航空护林站|建设工程造价站|水果开发示范场|国营机电排灌站|市政设施维护站|双牌一小|文物所|食品药品检验所|漉湖芦苇场|南洞庭芦苇场|岳化四小|岳化一小|南湖渔场|社科联|治理站|繁殖场|农民创业园|侨茶果场|种场|广播电视监测台|建设工程质量监督站|救助管理站|人防工程维护站|档案室|芝山堤防所|种子站|697台|人民政府接待科|新闻网站|中医院|政协政|公园管理一所|南方三小|农村排渍站|园林养护二所|园林养护一所|皮防所|兴宁完小|古峰二小|实验幼儿园|工商业联合会|福建技师学院|闽剧院|闽江学院|六都医院|规划技术站|国有林场|宁德市医院|电视微波站|吸虫病防治领导小组|原种繁殖场|楚雄692台|林业种籽苗木站|农业机械培训站|东川696台|鹿马登完小|定民族完小|（研究）所|复印店|打印店|租赁行|道路站|配货店|打字店|老厨|书吧|音响店|印刷行|科技|文体用品行|文体城|百业|蛋糕屋|书屋|名店|专店|劳保店|打印社|打字社|男装店|家俬城|快印店|装潢|机械配件|制作店|大汉店|加盟店|城北店|洲口店|零售店|刻字店|特产店|蔬菜摊|办公设备|印务|办公品店|用品批零|笔行|用品城|锁城|开锁|灯饰|桌椅批发|车务|鲜奶店|摄影店|茶莊|茶坊|肉店|实体店|花艺店|西点店|慈善会|分店|有限公";
//
//    private String G = "意见征集|征集意见|征求意见|建议征集|征集建议|征求建议|建议征求|调研公告|需求公示|招标预告|采购预告|预告公告|采购意向|意向公告|需求公示|招标计划表|询价意向|实施购买前|招标计划|招标公告|采购公告|询价公告|竞价公告|竞买公告|竞买公告|磋商公告|谈判公告|竞采公告|询价单|交易公告|询比价公告|在线报价|发包公告|需求公告|供应商征集公告|询比采购|竞拍公告|比选公告|供应商征集公告|公开选取|招租公告|比价公告|抢购公告|采购需求|竞争性谈判|摇号公告|征集需求公告|供应商遴选|招选公告|答疑公告|澄清公告|补遗公告|控制价|最高限价公告|最高预算|最高投标限价|情况说明|招选公告|复公告|补充公告|补充通知|补充公示|补充文件|更改通知|更改公告|恢复开标|重新开标的通知|延期的通知|废标公告|无效公告|异常公告|招标异常|采购异常|终止公告|取消交易|作废公告|撤销公告|中止公告|撤回公告|无效项目的公示|废置公告|废标结果公示|流标公告|无效公告|废标公告|招标异常|采购异常|终止公告|失败|取消交易|作废公告|流拍|取消公告|中止公告|取消交易公告|废置公告|废标结果公示|开标记录|开标公示|开标公告|评标报告|资格预审结果|资格后审结果|开标信息|资格审查报告|资审申请书公示|入围公示|资审公告|退款公告|退款公示|调研公告|异常公告|投标文件公示|市场调研报告|评标委员会组建|测试公告|面试结果|招标信息汇总|考生信息公示|经营店备案信息|退款通知|政策兑现情况|调研公告|招聘公告|资审申请书公示|社会公示|客车租赁经营备案|质疑答复函|面试公告|招聘大学生村务助理的公告|投诉处理决定书|投诉处理信息公告|投诉举报受理回应机制的公告|监督投诉电话的公示|投诉处理结果|消费投诉公示|投诉处理意见的通知|投诉举报和线索征集公告|投诉处理决定公告|执行情况公告|退款信息|退款内容|答疑公示|澄清公示|补遗公示|更正公告|变更公告|更正公示|变更公示";
//
//    private String I = "成交公告|中标公告|中选公告|结果公告|成交公示|中标公示|中选公示|结果公示|中标结果|成交结果、|拍卖出让【成交】|挂牌出让【成交】|询价结果|独家采购|选取结果|中选人公示|中标通知|供应商确认单|出让公示|比选公示|确认公告|中选结果";
//
//    private String H = "单位名称|公司名称";
//
//    private Pattern pattern;
//    private Pattern patternE;
//
//    @PostConstruct
//    private void loadData() {
//        /*
//         * 添加包相关词语.
//         */
//        A += "|((" + X + ")(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+)";
//        A += "|(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])(" + Y + ")";
//        pattern = Pattern.compile(A);
//
//        StringBuilder stringBuilder = new StringBuilder("");
//        String[] strings = E.split("\\|");
//        for (String key : strings) {
//            if (key.matches(".*(第[1一]).*") || !key.matches(".*(候选|投标|报价).*")) {
//                stringBuilder.append(key);
//                stringBuilder.append("|");
//            }
//        }
//        patternE = Pattern.compile(stringBuilder.toString().replaceAll("\\|$",""));
//    }
//
//
//    /**
//     * 主要提取程序:
//     * 1.提取标号
//     * 2.提取标段
//     * 3.走特殊逻辑
//     */
//    public JSONObject extractMultistandardUnit(String content,String title) {
//        JSONObject result = new JSONObject();
//
//        content = content.replaceAll("\\d+标段名称|\\d+标段编号|\\d+标段号|\\d+标的|标段划分|标包划分|标段/标包划分|标包/标段划分|同一标段|X标段|开标一览|投标一切|每个包|每包|面包|资产包|一包一投|标示|招标|同一包|标配|同一标包|包装|标准|标志|全部标段|xx标段|\\d*个标段|标区|标识|标书|包\\+|包扎|电子标|\\+包|\\+标|装成\\d*包|\\d*-\\d*包|\\d*\\.\\d*包|指标|参标|同一标|评标|定标|分为标段\\d*|\\d+-\\d+标|三（3）包服务|三（3）包政策|三（3）包合同|三（3）包凭证|鼠标|门前三包|包边|标压|包胶|目标|包含|第\\d*标室|袖标|共\\d*个包|电子CA标|三（3）包原则|每标段|标段/包划分|标定|摄影包|标签|沙包|包塑|每标包|达标|光标|服务三（3）包|色标|三标体系|标杆|标段：\\d*月|省标|打包|贯标|邓应标|三标管理体系|标段：\\d*日|标段：\\d*年|门前五包|基础包|资信标|标前准备|标段范围|内标|标室|坐标|标件|弃标|标贴|超标|技术标|轮廓标|资源包|标段投资|提标|转包|商务标|每子包|标化|标题|一标一评|卫生三包|单一标段|标机|不分标段|封包|每一标段|标段招标范围|标段合同估算|标注|某一包|某一标|卷包|书包|标方|竞标|标段预计范围|免费三包|需安标|太空包|沣标|标段数|欧标|建标|标段情况|标称|实行三包|项目部|云南三标医疗器械有限公司|一包一响应|标段（包别）划分|地标|标高|绿化标|公路包|“三包”政策|授标|一标三实|一标六实|标屏|三座标|标砖|产品实行“三包”|履行“三包”|实行“三包”|质量“三包”|价格标|一包服务|郭继标|承包|标段一个|三包凭证|开标一室|开标三室|开标四室|开标五室|开标六室|开标七室|开标八室|开标九室|开标十室|开标1室|开标2室|开标3室|开标4室|开标5室|开标6室|开标7室|开标8室|开标9室|开标10室|评标二室|评标一室|评标三室|评标四室|评标五室|评标六室|评标七室|评标八室|评标九室|评标十室|评标1室|评标2室|评标3室|评标4室|评标5室|评标6室|评标7室|评标8室|评标9室|评标10室|三包服务|3包服务|信用代码|二次|证书编号|证书代码|证件编号","");
//        content = content.replaceAll("<th","<td");
//        content = content.replaceAll("</th>","</td>");
//        content = content.replaceAll("</thead>|<thead>|</tbody>|<tbody>","");
//        content = content.replaceAll("流标","公司");
//        content = content.replaceAll("证编号|书编号|证名称|书名称|及编号","");
//        content = content.replaceAll("(【|\\[|（|\\()(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+(】|]|）|\\))","$2");
//        content = content.replaceAll("投标(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+","");
//
//        if (content.matches(".*(一标段|二标段|三标段|四标段|五标段|六标段|1标段|2标段|3标段|4标段|5标段|6标段|一标包|二标包|三标包|四标包|五标包|六标包|1标包|2标包|3标包|4标包|5标包|6标包|A包|B包|C包|D包|E包|F包|G包|1包|2包|3包|4包|5包|6包).*")) {
//            content = content.replaceAll("(" + A + ")" + "([^\\u4e00-\\u9fa5]*[\\u4e00-\\u9fa5]{0,3}[^\\u4e00-\\u9fa5]*)?" + "(一标段|二标段|三标段|四标段|五标段|六标段|1标段|2标段|3标段|4标段|5标段|6标段|一标包|二标包|三标包|四标包|五标包|六标包|1标包|2标包|3标包|4标包|5标包|6标包|A包|B包|C包|D包|E包|F包|G包|1包|2包|3包|4包|5包|6包)","$3");
//        }
//
//
//        Document document = Jsoup.parse(content);
//        content = document.html();
//        List<Element> elements = document.getElementsByTag("td");
//        for (Element element : elements) {
//            for (Element table : element.getElementsByTag("table")) {
//                content += table.toString();
//            }
//        }
//        document = Jsoup.parse(content);
//        elements = document.getElementsByTag("td");
//        for (Element element : elements) {
//            for (Element table : element.getElementsByTag("table")) {
//                table.remove();
//            }
//        }
//        elements = document.getElementsByTag("td");
//        for (Element element : elements) {
//            element.html(element.html().replaceAll("</?[^>]+>", ""));
//        }
//
//        String lengthContent = document.text();
//        elements = document.getElementsMatchingOwnText(pattern);
//
//        List<ExtractCell> effectElements = new ArrayList<>();
//        int priIndex = 0;
//        for (Element element : elements) {
//            ExtractCell extractCell = new ExtractCell();
//            boolean isTable = false;
//            if ("td".equals(element.tagName()) && element.text().length() <= 10) {
//
//                /*
//                 * 判断表格是否需要提取.
//                 */
//                Element tableData = element;
//                for (Element element1 : element.parents()) {
//                    if (element1.tagName().equals("table")) {
//                        tableData = element1;
//                    }
//                }
//                isTable = isExtractTable(tableData);
//                if (isTable) {
//                    List<String> cells = getFromTable(element);
//                    /*
//                     * 判断右下符合D之后.
//                     */
//                    if (cells.toString().matches(".*( " + D + ").*")) {
//                        isTable = true;
//                        extractCell.setElement(element);
//                        extractCell.setTable(isTable);
//                        effectElements.add(extractCell);
//                    } else {
//                        List<Element> cols = getColTable(element);
//                        for (int i = 0; i < cols.size(); i++) {
//                            if (i > 1) {
//                                break;
//                            }
//                            if (cols.get(i).text().matches(".*( " + D + ").*")) {
//                                isTable = true;
//                                extractCell.setElement(element);
//                                extractCell.setTable(isTable);
//                                effectElements.add(extractCell);
//                            }
//                        }
//                    }
//                }
//            }
//            if (!isTable) {
//                int index;
//                String subContent = lengthContent.substring(priIndex);
//                Matcher matcher = pattern.matcher(element.text());
//
//                String key = "";
//                if (matcher.find()) {
//                    key = matcher.group();
//                }
//
//                if (!StringUtils.isBlank(key)) {
//                    index = priIndex + subContent.indexOf(element.text()) + element.text().indexOf(key);
//                    if (index > 0 && Math.min(index + key.length() + 50,lengthContent.length()) < lengthContent.length()) {
//                        String subContent50 = lengthContent.substring(Math.max(index + key.length(),0),Math.min(index + key.length() + 50,lengthContent.length()));
//                        Matcher matcher50 = pattern.matcher(subContent50);
//                        if (matcher50.find()) {
//                            String subKey = matcher50.group();
//                            String temp = subContent50.substring(0,subContent50.indexOf(subKey));
//                            if (StringUtils.isBlank(temp) || temp.length() < 3) {
//                                key = subKey;
//                                index += subKey.length();
//                            } else {
//                                subContent50 = temp;
//                            }
//                        }
//                        if (subContent50.matches(".*(" + D + ").*")) {
//                            extractCell.setElement(element);
//                            extractCell.setTable(isTable);
//                            extractCell.setIndex(index);
//                            extractCell.setKey(key);
//                            effectElements.add(extractCell);
//                        }
//                        priIndex = index + key.length();
//                    }
//                }
//            }
//        }
//        /*
//         * 增加辅助关键词H
//         */
//        for (Element elementTemp : elements) {
//            Element elementH = null;
//            int num = 0;
//
//            while (num <= 35) {
//                Element nextElement = elementTemp.nextElementSibling();
//                elementTemp = nextElement;
//                if (nextElement == null) {
//                    break;
//                }
//                num += nextElement.text().length();
//                if (nextElement.text().matches(".*(" + H + ").*")) {
//                    elementH = nextElement;
//                    break;
//                }
//            }
//
//            if (elementH != null) {
//                for (Element element : elementH.getElementsMatchingOwnText(H)) {
//                    ExtractCell extractCell = new ExtractCell();
//                    boolean isTable = false;
//                    if ("td".equals(element.tagName()) && element.text().length() <= 10) {
//
//                        /*
//                         * 判断表格是否需要提取.
//                         */
//                        Element tableData = element;
//                        for (Element element1 : element.parents()) {
//                            if (element1.tagName().equals("table")) {
//                                tableData = element1;
//                            }
//                        }
//                        isTable = isExtractTable(tableData);
//                        if (isTable) {
//                            List<String> cells = getFromTable(element);
//                            /*
//                             * 判断右下符合D之后.
//                             */
//                            if (cells.toString().matches(".*( " + D + ").*")) {
//                                isTable = true;
//                                extractCell.setElement(element);
//                                extractCell.setTable(isTable);
//                                effectElements.add(extractCell);
//                            } else {
//                                List<Element> cols = getColTable(element);
//                                for (int i = 0; i < cols.size(); i++) {
//                                    if (i > 1) {
//                                        break;
//                                    }
//                                    if (cols.get(i).text().matches(".*( " + D + ").*")) {
//                                        isTable = true;
//                                        extractCell.setElement(element);
//                                        extractCell.setTable(isTable);
//                                        effectElements.add(extractCell);
//                                    }
//                                }
//                            }
//                        }
//                    }
//                    if (!isTable) {
//                        int index;
//                        String subContent = lengthContent.substring(priIndex);
//                        Matcher matcher = pattern.matcher(element.text());
//
//                        String key = "";
//                        if (matcher.find()) {
//                            key = matcher.group();
//                        }
//
//                        if (!StringUtils.isBlank(key)) {
//                            index = priIndex + subContent.indexOf(element.text()) + element.text().indexOf(key);
//                            if (index > 0 && Math.min(index + key.length() + 50,lengthContent.length()) < lengthContent.length()) {
//                                String subContent50 = lengthContent.substring(Math.max(index + key.length(),0),Math.min(index + key.length() + 50,lengthContent.length()));
//                                Matcher matcher50 = pattern.matcher(subContent50);
//                                if (matcher50.find()) {
//                                    String subKey = matcher50.group();
//                                    String temp = subContent50.substring(0,subContent50.indexOf(subKey));
//                                    if (StringUtils.isBlank(temp) || temp.length() < 3) {
//                                        key = subKey;
//                                        index += subKey.length();
//                                    } else {
//                                        subContent50 = temp;
//                                    }
//                                }
//                                if (subContent50.matches(".*(" + D + ").*")) {
//                                    extractCell.setElement(element);
//                                    extractCell.setTable(isTable);
//                                    extractCell.setIndex(index);
//                                    extractCell.setKey(key);
//                                    effectElements.add(extractCell);
//                                }
//                                priIndex = index + key.length();
//                            }
//                        }
//                    }
//                }
//            }
//        }
//
//        /*
//         * 标号提取
//         */
//        Set<String> biaohao = extractMultistandardBiaohao(effectElements,lengthContent);
//        if (biaohao.size() > 1) {
//            String regex = "((" + X + ")(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+)" +
//                    "|(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])(" + Y + ")";
//            Pattern pattern1 = Pattern.compile(regex);
//            /*
//             * 遍历标号:剔除所有汉字之后只保留数字去重.
//             */
//            Set<String> distinct = new HashSet<>();
//            for (String num : biaohao) {
//                Matcher matcher = pattern1.matcher(num);
//                if (matcher.find()) {
//                    distinct.add(matcher.group().replaceAll(X, ""));
//                } else {
//                    boolean isDel = num.contains("：") || num.contains(":");
//                    if (!isDel) {
//                        distinct.add(num);
//                    }
//                }
//            }
//            if (distinct.size() >= 2) {
//                result.put("type", "biaohao");
//                result.put("value", biaohao);
//                result.put("is_multistandard", true);
//                return result;
//            }
//        }
//
//        /*
//         * 标段提取
//         */
//        Set<String> biaoduan = extractMultistandardBiaoduan(effectElements,lengthContent);
//        biaoduan = biaoduan.stream().filter(new Predicate<String>() {
//            @Override
//            public boolean test(String s) {
//                boolean isDel = s.contains("：") || s.contains(":");
//                return !isDel;
//            }
//        }).collect(Collectors.toSet());
//        /*
//         * 遍历标段,如果存在包含关系就不添加
//         */
//        if (biaoduan.size() > 1) {
//            List<String> biaoduanDistinct = new ArrayList<>(biaoduan);
//            for (int i = 0; i < biaoduanDistinct.size() - 1; i++) {
//                String valueI = biaoduanDistinct.get(i);
//                for (int j = i + 1; j < biaoduanDistinct.size(); j++) {
//                    String valueJ = biaoduanDistinct.get(j);
//                    if (valueI.contains(valueJ) || valueJ.contains(valueI)) {
//                        if (valueJ.length() > valueI.length()) {
//                            biaoduan.remove(valueI);
//                        } else {
//                            biaoduan.remove(valueJ);
//                        }
//                    }
//                }
//            }
//            if (biaoduan.size() >= 2) {
//                result.put("type", "biaoduan");
//                result.put("value", biaoduan);
//                result.put("is_multistandard", true);
//                return result;
//            }
//        }
//
//        /*
//         * 补充规则1
//         */
//        List<Integer> attach = new ArrayList<>();
//        priIndex = 0;
//        document.getElementsByTag("block").remove();
//        document = Jsoup.parse(document.html().replaceAll("(" + A + ")[\\s\\S]{0,5}(地址|联系方式|电话|联系人)","无效关键词$2"));
//        lengthContent = document.text();
//
//        if (!lengthContent.matches(".*(不通过|不符合|未通过|未达标|未中标|不合格|未成交).*")) {
//
//            List<Element> documentElement = document.getElementsMatchingOwnText(patternE);
//
//            int index;
//            for (Element element : documentElement) {
//                Matcher matcher = patternE.matcher(element.text());
//                String key;
//                while (matcher.find()) {
//                    key = matcher.group();
//
//                    String subContent = lengthContent.substring(priIndex);
//                    index = priIndex + subContent.indexOf(key);
//
//                    if (index + key.length() > lengthContent.length()) {
//                        break;
//                    }
//
//                    String subContent50 = lengthContent.substring(Math.max(index + key.length(), 0), Math.min(index + key.length() + 8, lengthContent.length()));
//                    if (subContent50.matches(".*(" + A + ").*")) {
//                        continue;
//                    }
//                    if (subContent50.matches(".*(?<!(第2|第二|第3|第三)[\\s\\S]{0,8})(:|：).*")
//                            && !subContent50.matches(".*(;|；|\\.|。).*")) {
//                        subContent50 = lengthContent.substring(Math.max(index + key.length(), 0), Math.min(index + key.length() + 25, lengthContent.length()));
//                        if (subContent50.matches(".*(" + F + ").*") && element.text().matches(".*("
//                                + "(?<!\\d.{0,3})"
//                                + "(" + key + ")"
//                                + "(?!.{0,3}\\d)" +
//                                ").*")) {
//                            attach.add(index);
//                            priIndex = index + key.length();
//                            continue;
//                        }
//                    }
//                    subContent50 = lengthContent.substring(Math.max(index - 5, 0), Math.min(index, lengthContent.length()));
//                    if (subContent50.contains("为")) {
//                        subContent50 = lengthContent.substring(Math.max(index - 10, 0), Math.min(index, lengthContent.length()));
//                        if (subContent50.matches(".*(" + F + ").*")) {
//                            attach.add(index);
//                            priIndex = index + key.length();
//                            continue;
//                        }
//                    }
//                    subContent50 = lengthContent.substring(Math.max(index + key.length(), 0), Math.min(index + key.length() + 5, lengthContent.length()));
//                    if (subContent50.contains("是")) {
//                        subContent50 = lengthContent.substring(Math.max(index + key.length(), 0), Math.min(index + key.length() + 25, lengthContent.length()));
//                        if (subContent50.matches(".*(" + F + ").*")) {
//                            attach.add(index);
//                        }
//                    }
//                    priIndex = index + key.length();
//                }
//            }
//            if (attach.size() > 1) {
//                List<String> attachInfo = new ArrayList<>();
//                String substring = lengthContent.substring(attach.get(0), attach.get(1));
//                if (substring.length() < 300
//                        && !substring.matches(".*([ⅠⅡⅢⅣⅤⅥⅦⅧⅨ零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九][、\\.]).*")) {
//                    if (!substring.contains("内容") || lengthContent.length() > 500) {
//                        attachInfo.add(substring);
//                    }
//                }
//                if (attachInfo.size() == 1) {
//                    String firstLine = document.html().replaceAll("</?[^>]+>", "").trim().split("\n")[0] + title;
//                    if (!firstLine.matches(".*( " + G + ").*") || firstLine.matches(".*( " + I + ").*")) {
//                        result.put("type", "attach");
//                        result.put("value", attachInfo);
//                        result.put("is_multistandard", true);
//                        return result;
//                    }
//                }
//                for (int i = 1; i < attach.size() - 1; i++) {
//                    double ratio = Double.valueOf(attach.get(i) - attach.get(i - 1)) / Double.valueOf(attach.get(i + 1) - attach.get(i));
//
//                    if (ratio >= 0.7 && ratio <= 1.3) {
//                        String temp = lengthContent.substring(attach.get(i), attach.get(i + 1));
//                        if (Jsoup.parse(temp).text().length() < 300) {
//                            attachInfo.add(temp);
//                            if (attachInfo.size() > 2) {
//                                result.put("type", "attach");
//                                result.put("value", attachInfo);
//                                result.put("is_multistandard", true);
//                                return result;
//                            }
//                        }
//                    }
//                }
//            }
//
//
//            /*
//             * 补充规则2
//             */
//            List<ExtractCell> elementList = new ArrayList<>();
//            priIndex = 0;
//            for (Element element : documentElement) {
//                ExtractCell extractCell = new ExtractCell();
//                boolean isTable = false;
//                if ("td".equals(element.tagName()) && element.text().length() <= 15) {
//                    Element tableData = element;
//                    for (Element element1 : element.parents()) {
//                        if (element1.tagName().equals("table")) {
//                            tableData = element1;
//                        }
//                    }
//                    isTable = isExtractTable(tableData);
//                    if (isTable) {
//                        Matcher matcher = patternE.matcher(element.text());
//                        String key = "";
//                        if (matcher.find()) {
//                            key = matcher.group();
//                        }
//                        if (getRowTable(element).toString().matches(".*(评分|得分|排名|报价|审查).*")
//                                && !key.matches(".*(中标|成交|确定|中选).*")) {
//                            continue;
//                        }
//
//                        List<String> cells = getFromTable(element);
//                        /*
//                         * 判断右下符合D之后.
//                         */
//                        if (cells.toString().matches(".*( " + D + ").*")) {
//                            isTable = true;
//                            extractCell.setElement(element);
//                            extractCell.setTable(isTable);
//                            elementList.add(extractCell);
//                        } else {
//                            List<Element> cols = getColTable(element);
//                            for (int i = 0; i < cols.size(); i++) {
//                                if (i > 1) {
//                                    break;
//                                }
//                                if (cols.get(i).text().matches(".*( " + D + ").*")) {
//                                    isTable = true;
//                                    extractCell.setElement(element);
//                                    extractCell.setTable(isTable);
//                                    elementList.add(extractCell);
//                                }
//                            }
//                        }
//                    }
//                }
//
//                if (!isTable) {
//                    Matcher matcher = patternE.matcher(element.text());
//                    String key;
//                    while (matcher.find()) {
//                        extractCell = new ExtractCell();
//                        key = matcher.group();
//
//                        String subContent = lengthContent.substring(priIndex);
//                        index = priIndex + subContent.indexOf(key);
//
//                        if (index + key.length() > lengthContent.length()) {
//                            break;
//                        }
//
//                        String subContent50 = lengthContent.substring(Math.max(index + key.length(), 0), Math.min(index + key.length() + 8, lengthContent.length()));
//                        if (subContent50.matches(".*(" + A + ").*")) {
//                            continue;
//                        }
//                        if (subContent50.matches(".*(?<!(第2|第二|第3|第三)[\\s\\S]{0,8})(:|：).*")
//                                && !subContent50.matches(".*(;|；|\\.|。).*")) {
//                            subContent50 = lengthContent.substring(Math.max(index + key.length(), 0), Math.min(index + key.length() + 25, lengthContent.length()));
//                            if (subContent50.matches(".*(" + F + ").*")) {
//                                extractCell.setElement(element);
//                                extractCell.setTable(isTable);
//                                extractCell.setIndex(index);
//                                extractCell.setKey(key);
//                                elementList.add(extractCell);
//                                continue;
//                            }
//                        }
//                        subContent50 = lengthContent.substring(Math.max(index - 5, 0), Math.min(index, lengthContent.length()));
//                        if (subContent50.contains("为")) {
//                            subContent50 = lengthContent.substring(Math.max(index - 10, 0), Math.min(index, lengthContent.length()));
//                            if (subContent50.matches(".*(" + F + ").*")) {
//                                extractCell.setElement(element);
//                                extractCell.setTable(isTable);
//                                extractCell.setIndex(index);
//                                extractCell.setKey(key);
//                                elementList.add(extractCell);
//                                continue;
//                            }
//                        }
//                        subContent50 = lengthContent.substring(Math.max(index + key.length(), 0), Math.min(index + key.length() + 5, lengthContent.length()));
//                        if (subContent50.contains("是")) {
//                            subContent50 = lengthContent.substring(Math.max(index + key.length(), 0), Math.min(index + key.length() + 25, lengthContent.length()));
//                            if (subContent50.matches(".*(" + F + ").*")) {
//                                extractCell.setElement(element);
//                                extractCell.setTable(isTable);
//                                extractCell.setIndex(index);
//                                extractCell.setKey(key);
//                                elementList.add(extractCell);
//                            }
//                        }
//                        priIndex = index + key.length();
//                    }
//                }
//            }
//            Set<String> append = extractAppend(elementList,lengthContent);
//            if (append.size() >= 2) {
//                result.put("type","attach2");
//                result.put("value",append);
//                result.put("is_multistandard",true);
//                return result;
//            }
//        }
//
//        return result;
//    }
//
//    /**
//     * 判断表格行和列个数，若是单列或单行按照文本格式执行，若是两列多行（大于等于4）且关键词A在第一列按照竖标提取
//     */
//    private boolean isExtractTable(Element table) {
//        Elements trs = table.getElementsByTag("tr");
//        try {
//            for (Element tr : trs) {
//                if (tr.children().size() != 1) {
//                    return true;
//                }
//            }
//        } catch (NullPointerException nullPointerException) {
//        }
//        return false;
//    }
//
//    public Set<String> extractMultistandardBiaohao(List<ExtractCell> extractCells,String lengthContent) {
//        Set<String> result = new HashSet<>();
//        int priIndex = 0;
//        for (ExtractCell extractCell : extractCells) {
//            Element element = extractCell.getElement();
//            if (extractCell.isTable()) {
//                Element tableData = element;
//                for (Element element1 : element.parents()) {
//                    if (element1.tagName().equals("table")) {
//                        tableData = element1;
//                    }
//                }
//                boolean isNeed = true;
//                /*
//                 * 第二步提取
//                 * 1.读取行 走rule2()
//                 * 2. 列
//                 * 3.上两行
//                 */
//                Set<String> onceExtract = new HashSet<>();
//                if (isNeed) {
//                    for (Element td : getRowTable(element)) {
//                        if (td.text().length() < 6 && td.text().matches(".*(" + B + ").*")) {
//                            Set<String> temp = extractRuleTable2(td);
//                            if (!temp.isEmpty()) {
//                                if (temp.size() > 1 || tableData.getElementsByTag("tr").size() == 2) {
//                                    onceExtract.clear();
//                                    onceExtract.addAll(temp);
//                                    break;
//                                }
//                                onceExtract.addAll(temp);
//                            }
//                        }
//                    }
//                }
//                result.addAll(onceExtract);
//                if (result.size() > 1) {
//                    isNeed = false;
//                }
//
//                if (isNeed) {
//                    for (Element td : getColTable(element)) {
//                        if (td.text().length() < 6 && td.text().matches(".*(" + B + ").*")) {
//                            Set<String> temp = extractRuleTable2(td);
//                            if (!temp.isEmpty()) {
//                                if (temp.size() > 1) {
//                                    result.clear();
//                                    result.addAll(temp);
//                                    break;
//                                }
//                                result.addAll(temp);
//                            }
//                        }
//                    }
//                }
//                if (result.size() > 1) {
//                    isNeed = false;
//                }
//
//                if (isNeed) {
//                    for (Element td : getPriTable(tableData,lengthContent)) {
//                        if (td.text().length() < 6 && td.text().matches(".*(" + B + ").*")) {
//                            Set<String> temp = extractRuleTable2(td);
//                            if (!temp.isEmpty()) {
//                                isNeed = false;
//                                if (temp.size() > 1) {
//                                    result.clear();
//                                    result.addAll(temp);
//                                    break;
//                                }
//                                result.addAll(temp);
//                            }
//                        }
//                    }
//                }
//
//                /*
//                 * 1.读取整个表格
//                 * 2.读取表格前两行
//                 */
//                if (isNeed) {
//                    for (Element td : tableData.getElementsByTag("td")) {
//                        String matchText = extractRuleTable1(td);
//                        if (!StringUtils.isBlank(matchText)) {
//                            result.add(convertChinese(matchText));
//                        }
//                    }
//                }
//                if (result.size() > 1) {
//                    isNeed = false;
//                }
//
//                if (isNeed) {
//                    for (Element td : getPriTable(tableData,lengthContent)) {
//                        String matchText = extractRuleTable1(td);
//                        if (!StringUtils.isBlank(matchText)) {
//                            result.add(convertChinese(matchText));
//                        }
//                    }
//                }
//            } else {
//                int index;
//                Matcher matcher = pattern.matcher(element.text());
//                String subContent;
//                while (matcher.find()) {
//                    String key = matcher.group();
//
//                    subContent = lengthContent.substring(priIndex);
//                    if (!subContent.contains(key)) {
//                        break;
//                    }
//                    index = priIndex + subContent.indexOf(key);
//                    if (key.matches(".*(((" + X + ")(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+)" +
//                            "|(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])(" + Y + ")).*")) {
//                        index += key.length();
//                    }
//
//                    String extractArea;
//                    if (priIndex == 0) {
//                        extractArea = lengthContent.substring(Math.max(index - 120, 0), index);
//                    } else {
//                        if (priIndex < index && lengthContent.substring(priIndex, index).length() < 200) {
//                            extractArea = lengthContent.substring(Math.max(priIndex, 0), index);
//                        } else {
//                            extractArea = lengthContent.substring(Math.max(index - 120, 0), index);
//                        }
//                    }
//
//                    /*
//                     * 截取完片段后执行提取逻辑.
//                     */
//                    String temp = extractRuleText1(extractArea);
//                    if (!StringUtils.isBlank(temp)) {
//                        result.add(temp);
//                    } else {
//                        temp = extractRuleText2(extractArea);
//                        if (!StringUtils.isBlank(temp)) {
//                            result.add(temp);
//                        }
//                    }
//                    priIndex = index + key.length();
//                }
//            }
//        }
//        return result;
//    }
//
//    public Set<String> extractMultistandardBiaoduan(List<ExtractCell> extractCells, String lengthContent) {
//        Set<String> result = new HashSet<>();
//        int priIndex = 0;
//        for (ExtractCell extractCell : extractCells) {
//            Element element = extractCell.getElement();
//            if (extractCell.isTable()) {
//                Element tableData = element;
//                for (Element element1 : element.parents()) {
//                    if (element1.tagName().equals("table")) {
//                        tableData = element1;
//                    }
//                }
//
//                List<Element> trs = tableData.getElementsByTag("tr");
//                for (int i = 0; i < trs.size() - 1; i++) {
//                    if (!trs.get(i).getElementsByTag("td").isEmpty()) {
//                        Element td = trs.get(i).getElementsByTag("td").get(0);
//                        if (!StringUtils.isBlank(td.attr("rowspan"))) {
//                            int rowspan = Integer.parseInt(td.attr("rowspan").replaceAll("[^\\d]",""));
//                            for (int j = i + 1; j < i + rowspan && j < trs.size(); j++) {
//                                trs.get(j).prependChild(td.clone().removeAttr("rowspan"));
//                            }
//                        }
//                    }
//                }
//
//
//                /*
//                 * 1.读取行 走rule2()
//                 * 2. 列
//                 * 3.上两行
//                 */
//                Set<String> onceExtract = new HashSet<>();
//                boolean isNeed = true;
//                for (Element td : getRowTable(element)) {
//                    if (td.text().matches(".*(" + C + ").*")) {
//                        Set<String> temp = extractRuleBiaoduanTableCol(td);
//                        if (!temp.isEmpty()) {
//                            if (temp.size() > 1 || tableData.getElementsByTag("tr").size() == 2) {
//                                onceExtract.clear();
//                                onceExtract.addAll(temp);
//                                break;
//                            }
//                            onceExtract.addAll(temp);
//                        }
//
//                    }
//                }
//                result.addAll(onceExtract);
//                if (result.size() > 1) {
//                    isNeed = false;
//                }
//
//                if (isNeed) {
//                    for (Element td : getColTable(element)) {
//                        if (td.text().matches(".*(" + C + ").*")) {
//                            Set<String> temp = extractRuleBiaoduanTableRow(td);
//                            if (!temp.isEmpty()) {
//                                if (temp.size() > 1) {
//                                    result.clear();result.addAll(temp);
//                                    break;
//                                }
//                                result.addAll(temp);
//                            }
//                        }
//                    }
//                }
//                if (result.size() > 1) {
//                    isNeed = false;
//                }
//
//                if (isNeed) {
//                    for (Element td : getPriTable(tableData,lengthContent)) {
//                        if (td.text().matches(".*(" + C + ").*")) {
//                            Set<String> temp = extractRuleBiaoduanTableCol(td);
//                            if (temp.isEmpty()) {
//                                temp = extractRuleBiaoduanTableRow(td);
//                            }
//                            if (!temp.isEmpty()) {
//                                if (temp.size() > 1) {
//                                    result.clear();
//                                    result.addAll(temp);
//                                    break;
//                                }
//                                result.addAll(temp);
//                            }
//                        }
//                    }
//                }
//            } else {
//
//                int index;
//                Matcher matcher = pattern.matcher(element.text());
//                String subContent;
//                while (matcher.find()) {
//                    String key = matcher.group();
//                    subContent = lengthContent.substring(priIndex);
//                    if (!subContent.contains(key)) {
//                        break;
//                    }
//                    index = priIndex + subContent.indexOf(key) + key.length();
//                    if (index >= Math.min(index + 35,lengthContent.length())) {
//                        break;
//                    }
//
//                    String extractArea;
//                    if (priIndex == 0) {
//                        extractArea = lengthContent.substring(Math.max(index - 120, 0), index);
//                    } else {
//                        if (priIndex < index && lengthContent.substring(priIndex, index).length() < 200) {
//                            extractArea = lengthContent.substring(Math.max(priIndex, 0), index);
//                        } else {
//                            extractArea = lengthContent.substring(Math.max(index - 120, 0), index);
//                        }
//                    }
//
//                    /*
//                     * 截取完片段后执行提取逻辑.
//                     */
//                    Matcher matcherTemp = Pattern.compile("(" + C + ")(?![\\s\\S]{0,10}(编号|代码|号码))[\\s\\S]{0,10}(名称|:|：)").matcher(extractArea);
//                    if (matcherTemp.find()) {
//                        String keyArea = matcherTemp.group();
//                        extractArea = extractArea.substring(extractArea.indexOf(keyArea) + keyArea.length());
//                        String temp = extractRuleBiaoduanText(extractArea);
//                        if (!StringUtils.isBlank(temp) && temp.length() > 2) {
//                            result.add(temp);
//                        }
//                    }
//                    priIndex = index;
//                }
//            }
//        }
//        return result;
//    }
//
//
//
//    public Set<String> extractAppend(List<ExtractCell> extractCells,String lengthContent) {
//        Set<String> result = new HashSet<>();
//        for (ExtractCell extractCell : extractCells) {
//            Element element = extractCell.getElement();
//            if (extractCell.isTable()) {
//                boolean isNeed = true;
//                /*
//                 * 1.读取行 走rule2()
//                 * 2. 列
//                 */
//                for (Element td : getRowTable(element)) {
//                    if (td.text().length() < 30 && td.text().matches(".*(" + F + ").*")) {
//                        result.add(td.text());
//                    }
//                }
//                if (result.size() > 1) {
//                    isNeed = false;
//                }
//
//                if (isNeed) {
//                    for (Element td : getColTable(element)) {
//                        if (td.text().length() < 30 && td.text().matches(".*(" + F + ").*")) {
//                            result.add(td.text());
//                        }
//                    }
//                }
//            }
//        }
//        if (result.size() > 1) {
//            return result;
//        }
//        result.clear();
//
//        int priIndex = 0;
//        for (ExtractCell extractCell : extractCells) {
//            if (!extractCell.isTable()) {
//                int index;
//                String subContent = lengthContent.substring(priIndex);
//                String key = extractCell.getKey();
//                index = priIndex + subContent.indexOf(key);
//                if (index + key.length() > lengthContent.length()) {
//                    break;
//                }
//
//                String subContent50 = lengthContent.substring(Math.max(index + key.length(),0),Math.min(index + key.length() + 8,lengthContent.length()));
//                Matcher matcherOne = Pattern.compile("[:：]").matcher(subContent50);
//                if (matcherOne.find()) {
//                    String keyOne = matcherOne.group();
//                    subContent50 = lengthContent.substring(Math.max(index + key.length(),0),Math.min(index + key.length() + 25,lengthContent.length()));
//                    Matcher matcherTwo = Pattern.compile(F).matcher(subContent50);
//                    if (matcherTwo.find()) {
//                        String keyTwo = matcherTwo.group();
//                        subContent50 = subContent50.substring(subContent50.indexOf(keyOne),subContent50.indexOf(keyTwo));
//                        result.add(subContent50);
//                        priIndex = index + key.length();
//                        continue;
//                    }
//                }
//
//                subContent50 = lengthContent.substring(Math.max(index - 5,0),Math.min(index,lengthContent.length()));
//                matcherOne = Pattern.compile("为").matcher(subContent50);
//                if (matcherOne.find()) {
//                    String keyOne = matcherOne.group();
//                    subContent50 = lengthContent.substring(Math.max(index - 10,0),Math.min(index,lengthContent.length()));
//
//                    Matcher matcherTwo = Pattern.compile(F).matcher(subContent50);
//                    if (matcherTwo.find()) {
//                        String keyTwo = matcherTwo.group();
//                        subContent50 = subContent50.substring(subContent50.indexOf(keyTwo),subContent50.indexOf(keyOne));
//                        result.add(subContent50);
//                        priIndex = index + key.length();
//                        continue;
//                    }
//                }
//                subContent50 = lengthContent.substring(Math.max(index + key.length(),0),Math.min(index + key.length() + 5,lengthContent.length()));
//                matcherOne = Pattern.compile("是").matcher(subContent50);
//                if (matcherOne.find()) {
//                    String keyOne = matcherOne.group();
//                    subContent50 = lengthContent.substring(Math.max(index + key.length(),0),Math.min(index + key.length() + 25,lengthContent.length()));
//                    Matcher matcherTwo = Pattern.compile(F).matcher(subContent50);
//                    if (matcherTwo.find()) {
//                        String keyTwo = matcherTwo.group();
//                        subContent50 = subContent50.substring(subContent50.indexOf(keyOne),subContent50.indexOf(keyTwo));
//                        result.add(subContent50);
//                    }
//                }
//                priIndex = index + key.length();
//            }
//        }
//        return  result;
//    }
//
//    private String convertChinese(String extractArea) {
//        extractArea = extractArea.replaceAll("[壹一]","1");
//        extractArea = extractArea.replaceAll("[贰二]","2");
//        extractArea = extractArea.replaceAll("[叁三]","3");
//        extractArea = extractArea.replaceAll("[肆四]","4");
//        extractArea = extractArea.replaceAll("[伍五]","5");
//        extractArea = extractArea.replaceAll("[陆六]","6");
//        extractArea = extractArea.replaceAll("[柒七]","7");
//        extractArea = extractArea.replaceAll("[捌八]","8");
//        extractArea = extractArea.replaceAll("[玖九]","9");
//        extractArea = extractArea.replaceAll("[零]","0");
//        extractArea = extractArea.replaceAll("[拾]","10");
//        return extractArea;
//    }
//
//    private String extractRuleTable1(Element td) {
//        String matchTxt = td.text();
//        if (td.text().length() > 30) {
//            return "";
//        }
//        if (matchTxt.matches(".*(" + "(" + X + ")"
//                + "(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+" +
//                ").*")) {
//            return convertChinese(matchTxt);
//        } else if (matchTxt.matches(".*("
//                + "(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+"
//                + "(" + Y + ")" +
//                ").*")) {
//            return convertChinese(matchTxt);
//        }
//        return "";
//    }
//
//    private Set<String> extractRuleTable2(Element td) {
//        Set<String> result = new HashSet<>();
//        if (td.text().length() > 10) {
//            return result;
//        }
//
//        List<Element> colData = getColTable(td);
//        for (Element tdData : colData) {
//            if (tdData.text().length() <= 30 && tdData.text().matches(".*("
//                    + "\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九]" +
//                    ").*")) {
//                result.add(tdData.text());
//            }
//        }
//
//        if (result.isEmpty()) {
//            List<Element> rowData = getRowTable(td);
//            for (Element tdData : rowData) {
//                if (tdData.text().length() <= 30 && tdData.text().matches(".*("
//                        + "\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九]" +
//                        ").*")) {
//                    result.add(tdData.text());
//                }
//            }
//        }
//        return result.stream().map(new Function<String, String>() {
//            @Override
//            public String apply(String s) {
//                return convertChinese(s);
//            }
//        }).collect(Collectors.toSet());
//    }
//
//    private Set<String> extractRuleTableAppend(Element td) {
//        Set<String> result = new HashSet<>();
//        if (td.text().length() > 10) {
//            return result;
//        }
//
//        List<Element> colData = getColTable(td);
//        for (Element tdData : colData) {
//            if (tdData.text().length() <= 30 && tdData.text().matches(".*("
//                    + "\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九]" +
//                    ").*")) {
//                result.add(tdData.text());
//            }
//        }
//
//        if (result.isEmpty()) {
//            List<Element> rowData = getRowTable(td);
//            for (Element tdData : rowData) {
//                if (tdData.text().length() <= 30 && tdData.text().matches(".*("
//                        + "\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九]" +
//                        ").*")) {
//                    result.add(tdData.text());
//                }
//            }
//        }
//        return result.stream().map(new Function<String, String>() {
//            @Override
//            public String apply(String s) {
//                return convertChinese(s);
//            }
//        }).collect(Collectors.toSet());
//    }
//
//    private Set<String> extractRuleBiaoduanTableCol(Element td) {
//        Set<String> result = new HashSet<>();
//        boolean isExtract = td.text().length() <=3 || (td.text().length() < 20 && td.text().contains("名称")) || td.text().matches(C);
//        if (isExtract) {
//            List<Element> colData = getColTable(td);
//            for (Element tdData : colData) {
//                if (tdData.text().length() <= 50) {
//                    result.add(tdData.text());
//                }
//            }
//        }
//        return result.stream().map(new Function<String, String>() {
//            @Override
//            public String apply(String s) {
//                return convertChinese(s);
//            }
//        }).filter(new Predicate<String>() {
//            @Override
//            public boolean test(String s) {
//                return !StringUtils.isBlank(s);
//            }
//        }).collect(Collectors.toSet());
//    }
//
//    private Set<String> extractRuleBiaoduanTableRow(Element td) {
//        Set<String> result = new HashSet<>();
//        boolean isExtract = td.text().length() <=3 || (td.text().length() < 20 && td.text().contains("名称")) || td.text().matches(C);
//        if (isExtract) {
//            List<Element> rowData = getRowTable(td);
//            for (Element tdData : rowData) {
//                if (tdData.text().length() <= 50) {
//                    result.add(tdData.text());
//                }
//            }
//        }
//        return result.stream().map(new Function<String, String>() {
//            @Override
//            public String apply(String s) {
//                return convertChinese(s);
//            }
//        }).filter(new Predicate<String>() {
//            @Override
//            public boolean test(String s) {
//                return !StringUtils.isBlank(s);
//            }
//        }).collect(Collectors.toSet());
//    }
//
//    private String extractRuleText1(String extractArea) {
//        String result = "";
//        Matcher matcher = Pattern.compile("((" + X + ")"
//                + "(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+)").matcher(extractArea);
//        while (matcher.find()) {
//            result = matcher.group();
//        }
//        if (!StringUtils.isBlank(result)) {
//            return convertChinese(result);
//        }
//
//        matcher = Pattern.compile("("
//                + "(\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九])+"
//                + "(" + Y + ")" +
//                ")").matcher(extractArea);
//        while (matcher.find()) {
//            result = matcher.group();
//        }
//        if (!StringUtils.isBlank(result)) {
//            return convertChinese(result);
//        }
//        return "";
//    }
//
//    private String extractRuleText2(String extractArea) {
//        Matcher matcher = Pattern.compile("(" + B + ")[\\s\\S]*?[,，:：。、\n]").matcher(extractArea);
//        String result = "";
//        while (matcher.find()) {
//            String BKey = matcher.group();
//            if (BKey.length() > 20) {
//                BKey = BKey.substring(0,20);
//            }
//            Matcher matcher2 = Pattern.compile("\\d|[a-zA-Z]|[ⅠⅡⅢⅣⅤⅥⅦⅧⅨ]|[零壹贰叁肆伍陆柒捌玖拾一二三四五六七八九]").matcher(BKey);
//            if (matcher2.find()) {
//                result = matcher2.group();
//            }
//        }
//        return convertChinese(result);
//    }
//
//    private String extractRuleBiaoduanText(String extractArea) {
//        Matcher matcher = Pattern.compile("(" + B + ")[\\s\\S]*?[,，:：。.、\n]").matcher(extractArea);
//        String result = "";
//        while (matcher.find()) {
//            String BKey = matcher.group();
//            if (BKey.length() > 30) {
//                BKey = BKey.substring(0,30);
//            }
//            result = BKey.replaceAll("[^\\da-zA-ZⅠⅡⅢⅣⅤⅥⅦⅧⅨ\u4e00-\u9fa5]","");
//        }
//        return convertChinese(result);
//    }
//
//    /**
//     * 提取当前单元格的下一个和右一个
//     */
//    private static List<String> getFromTable(Element el) {
//        String tagName = el.tagName().toUpperCase();
//        List<String> list = new ArrayList<>();
//        if ("TD".equals(tagName) || "TH".equals(tagName)) {  //出现TH
//            //处理td里套table的情况
//            boolean foundInTdTable = false;
//            Element target = JsoupUtils.getNextFromTdTable(el);
//            if(target != null){
//                list.add(target.text().replaceAll("\\s*", ""));
//                foundInTdTable = true;
//            }
//            if(!foundInTdTable){
//                getFromTableCell(el, list);
//            }
//        } else if (el.hasParent() && "TD".equals(el.parent().tagName().toUpperCase())) {
//            getFromTableCell(el, list);
//        } else if (el.hasParent() && el.parent().hasParent() && "TD".equals(el.parent().parent().tagName().toUpperCase())) {
//            getFromTableCell(el, list);
//        }
//        return list;
//    }
//    private static void getFromTableCell(Element el, List<String> list) {
//        Element nextTdEle = JsoupUtils.getHorizontalNextElement(el);
//        if (nextTdEle != null) {
//            list.add(nextTdEle.text().replaceAll("\\s*", ""));
//        }
//        Map<String, Object> map = new HashMap<>();
//        Element elTemp = el;
//        map.put("next", elTemp);
//        Map<String, Object> mapResult = JsoupUtils.getVerticalNextElement(map);
//        nextTdEle = (Element) mapResult.get("next");
//        if (nextTdEle != null) {
//            list.add(nextTdEle.text().replaceAll("\\s*", ""));
//            elTemp = nextTdEle;
//        }
//    }
//
//    /**
//     * 前两行
//     */
//    private List<Element> getPriTable(Element extractArea,String contentText) {
//        List<Element> result = new ArrayList<>();
//        Element priElement = extractArea.previousElementSibling();
//        if (priElement != null) {
//            Element extractArea2 = priElement.previousElementSibling();
//            if (extractArea2 != null) {
//                result.add(extractArea2);
//            }
//            result.add(priElement);
//        }
//
//        /*
//         * 1.如果html中拿不到,就截取前200字符串.
//         */
//        if (result.size() < 2) {
//            int index = contentText.indexOf(extractArea.text());
//            if (index != -1) {
//                String[] tempContent = contentText.substring(Math.max(index-100,0),Math.min(index,contentText.length())).split("\\s");
//                for (String temp : tempContent) {
//                    result.add(Jsoup.parse(temp));
//                }
//            }
//        }
//        return result;
//    }
//
//    /**
//     * 找一列
//     */
////    private static List<Element> getColTable(Element extractArea) {
////        List<Element> result = new ArrayList<>();
////        int index = 0;
////        int colIndex = 0;
////        int size = 0;
////        for (Element element1 : extractArea.parents()) {
////            if ("tr".equals(element1.tagName())) {
////                Elements tds = element1.getElementsByTag("td");
////                size = tds.size();
////                for (int i = 0; i < tds.size(); i++) {
////                    if (tds.get(i).equals(extractArea)) {
////                        index = i;
////                        break;
////                    }
////                }
////
////                Elements trs = element1.parent().getElementsByTag("tr");
////                colIndex = trs.indexOf(element1);
////            }
////        }
////
////        for (Element element1 : extractArea.parents()) {
////            if (element1.tagName().equals("table")) {
////                for (int i = colIndex + 1; i < element1.getElementsByTag("tr").size(); i++) {
////                    Element trs = element1.getElementsByTag("tr").get(i);
////                    Elements tds = trs.getElementsByTag("td");
////                    if (tds.size() < size && tds.size() > 1) {
////                        continue;
////                    }
////                    if (!tds.isEmpty() && tds.size() > index) {
////                        if (tds.get(index) != extractArea) {
////                            result.add(tds.get(index));
////                        }
////                    }
////
////                }
////            }
////        }
////        return result;
////    }
//
//    /**
//     * 找一列,支持正反向查找.
//     */
//    private static List<Element> getColTable(Element extractArea) {
//        List<Element> result = new ArrayList<>();
//        int index = 0;
//        int colIndex = 0;
//        int size = 0;
//        boolean isReverse = false;
//
//        for (Element element1 : extractArea.parents()) {
//            if ("tr".equals(element1.tagName())) {
//                Elements tds = element1.getElementsByTag("td");
//                for (int i = 0; i < tds.size(); i++) {
//                    int tempIndex = tds.size() - 1 - i;
//                    if (tds.get(tempIndex).equals(extractArea)) {
//                        size = tds.size();
//                        if (i < size / 2) {
//                            index = i;
//                            isReverse = true;
//                        } else {
//                            index = tempIndex;
//                        }
//                        break;
//                    }
//                }
//
//                Elements trs = element1.parent().getElementsByTag("tr");
//                colIndex = trs.indexOf(element1);
//            }
//        }
//
//        for (Element element1 : extractArea.parents()) {
//            if (element1.tagName().equals("table")) {
//
//                if (isReverse) {
//                    for (int i = colIndex + 1; i < element1.getElementsByTag("tr").size(); i++) {
//                        Element trs = element1.getElementsByTag("tr").get(i);
//                        Elements tds = trs.getElementsByTag("td");
//
//                        if (!tds.isEmpty() && tds.size() > index) {
//                            int tempIndex = tds.size() - 1 - index;
//                            if (tds.get(tempIndex) != extractArea) {
//                                result.add(tds.get(tempIndex));
//                            }
//                        }
//
//                    }
//                } else {
//                    for (int i = colIndex + 1; i < element1.getElementsByTag("tr").size(); i++) {
//                        Element trs = element1.getElementsByTag("tr").get(i);
//                        Elements tds = trs.getElementsByTag("td");
//                        if (tds.size() < size && tds.size() > 1) {
//                            continue;
//                        }
//                        if (!tds.isEmpty() && tds.size() > index) {
//                            if (tds.get(index) != extractArea) {
//                                result.add(tds.get(index));
//                            }
//                        }
//
//                    }
//                }
//
//
//            }
//        }
//
//
//        return result;
//    }
//
//    /**
//     * 找一行
//     */
//    private static List<Element> getRowTable(Element extractArea) {
//        List<Element> result = new ArrayList<>();
//        for (Element element1 : extractArea.parents()) {
//            if ("tr".equals(element1.tagName())) {
//                Elements tr = element1.getElementsByTag("td");
//                int index = tr.indexOf(extractArea);
//                int i = index - 1;
//                int j = index + 1;
//                while (i >= 0 || j < tr.size()) {
//                    if (i >= 0) {
//                        result.add(tr.get(i));
//                        i--;
//                    }
//                    if (j < tr.size()) {
//                        result.add(tr.get(j));
//                        j++;
//                    }
//                }
//
//                break;
//            }
//        }
//        return result;
//    }
//}
